{"id":"2f1c9ee5e6af5490be2fea705da302d5","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/Bridge.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\nimport { Ownable } from '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/utils/Address.sol';\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Bridge is Ownable, ReentrancyGuard {\n  using SafeERC20 for IERC20;\n  using Address for address payable;\n\n  error OnlyEnabled();\n  error InvalidAmount(uint256 amount);\n  error InvalidProvider();\n  error InvalidRecipientAddress();\n  error InvalidArgs();\n  error InvalidValue();\n  error AmountMustEqualValue();\n  error ParamsError();\n  error Initialized();\n\n  event Bridged(address sender, address provider, address token, uint256 amount, bytes metadata, uint256 index);\n  event Released(address recipient, address provider, address token, uint256 amount, bytes metadata, uint256 index);\n  event EnableChanged(bool isEnabled);\n\n  struct BridgeStorage {\n    bool isEnabled;\n    bool initialized;\n    mapping(address => uint256) bridgeIndexs;\n    mapping(address => uint256) releaseIndexs;\n    mapping(address => mapping(uint256 => bytes)) bridges;\n    mapping(address => mapping(uint256 => bytes)) releases;\n  }\n\n  function s() internal pure returns (BridgeStorage storage cs) {\n    bytes32 position = keccak256('Bridge.contract.storage.v1');\n    assembly {\n      cs.slot := position\n    }\n  }\n\n  modifier onlyEnabled() {\n    if (!s().isEnabled) {\n      revert OnlyEnabled();\n    }\n    _;\n  }\n\n  constructor() Ownable(msg.sender) {}\n\n  function initialize(bool _isEnabled) external onlyOwner {\n    if (s().initialized) revert Initialized();\n\n    s().isEnabled = _isEnabled;\n    s().initialized = true;\n  }\n\n  function setIsEnabled(bool _isEnabled) external onlyOwner {\n    s().isEnabled = _isEnabled;\n\n    emit EnableChanged(_isEnabled);\n  }\n\n  function bridge(uint256 amount, address token, address payable provider, bytes memory metadata) external payable onlyEnabled nonReentrant {\n    if (provider == address(0)) revert InvalidProvider();\n    if (amount == 0) revert InvalidAmount(amount);\n    if (token == address(0) && amount != msg.value) revert AmountMustEqualValue();\n\n    address user = msg.sender;\n\n    if (token == address(0)) {\n      provider.sendValue(msg.value);\n    } else {\n      IERC20(token).safeTransferFrom(user, provider, amount);\n    }\n\n    uint256 index = bridgeIndex(user);\n\n    storeBridgeMetadata(user, metadata);\n    increaseBridgeIndex(user);\n\n    emit Bridged(msg.sender, provider, token, amount, metadata, index);\n  }\n\n  function release(uint256 amount, address token, address payable recipient, bytes memory metadata) external payable onlyEnabled nonReentrant {\n    if (token == address(0) && amount != msg.value) revert AmountMustEqualValue();\n\n    _release(amount, token, recipient, metadata);\n  }\n\n  function multiRelease(\n    uint256[] memory amounts,\n    address[] memory tokens,\n    address payable[] memory recipients,\n    bytes[] memory metadatas\n  ) external payable onlyEnabled nonReentrant {\n    if (amounts.length != tokens.length || amounts.length != recipients.length || amounts.length != metadatas.length) revert InvalidArgs();\n\n    uint256 tAmount;\n\n    for (uint256 i = 0; i < amounts.length; i++) {\n      if (tokens[i] == address(0)) {\n        tAmount += amounts[i];\n      }\n    }\n\n    if (tAmount != msg.value) revert AmountMustEqualValue();\n\n    for (uint256 i = 0; i < amounts.length; i++) {\n      _release(amounts[i], tokens[i], recipients[i], metadatas[i]);\n    }\n  }\n\n  function _release(uint256 amount, address token, address payable recipient, bytes memory metadata) internal {\n    if (recipient == address(0)) revert InvalidRecipientAddress();\n    if (amount == 0) revert InvalidAmount(amount);\n\n    address provider = msg.sender;\n\n    if (token == address(0)) {\n      recipient.sendValue(amount);\n    } else {\n      IERC20(token).safeTransferFrom(provider, recipient, amount);\n    }\n\n    uint256 index = releaseIndex(provider);\n\n    storeReleaseMetadata(provider, metadata);\n    increaseReleaseIndex(provider);\n\n    emit Released(recipient, provider, token, amount, metadata, index);\n  }\n\n  function storeBridgeMetadata(address user, bytes memory metadata) internal {\n    s().bridges[user][bridgeIndex(user)] = metadata;\n  }\n\n  function storeReleaseMetadata(address provider, bytes memory metadata) internal {\n    s().releases[provider][releaseIndex(provider)] = metadata;\n  }\n\n  function increaseBridgeIndex(address user) internal {\n    s().bridgeIndexs[user] += 1;\n  }\n\n  function increaseReleaseIndex(address provider) internal {\n    s().releaseIndexs[provider] += 1;\n  }\n\n  function releaseIndex(address provider) public view returns (uint256) {\n    return s().releaseIndexs[provider];\n  }\n\n  function bridgeIndex(address user) public view returns (uint256) {\n    return s().bridgeIndexs[user];\n  }\n\n  function isEnabled() public view returns (bool) {\n    return s().isEnabled;\n  }\n\n  // to help users who accidentally send their tokens to this contract\n  function withdrawToken(address token, address account, uint256 amount) external onlyOwner {\n    IERC20(token).safeTransfer(account, amount);\n  }\n\n  // to help users who accidentally send their ether to this contract\n  function withdrawEther(address payable account, uint256 amount) external onlyOwner {\n    account.sendValue(amount);\n  }\n\n  // fallback() external payable {}\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.24","long_version":"0.8.24+commit.e11b9ed9.Darwin.appleclang","zk_version":"1.4.0","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[834],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":835,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":834,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,834],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[225]},"id":226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"132:70:1","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":225,"linearizedBaseContracts":[225],"name":"IERC20","nameLocation":"213:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"226:158:1","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":159,"name":"Transfer","nameLocation":"395:8:1","nodeType":"EventDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:1","nodeType":"VariableDeclaration","scope":159,"src":"404:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:1","nodeType":"VariableDeclaration","scope":159,"src":"426:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:1","nodeType":"VariableDeclaration","scope":159,"src":"446:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:1"},"src":"389:72:1"},{"anonymous":false,"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"467:148:1","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":168,"name":"Approval","nameLocation":"626:8:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:1","nodeType":"VariableDeclaration","scope":168,"src":"635:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:1","nodeType":"VariableDeclaration","scope":168,"src":"658:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:1","nodeType":"VariableDeclaration","scope":168,"src":"683:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:1"},"src":"620:78:1"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"704:65:1","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":174,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"794:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":174,"src":"820:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:1"},"scope":225,"src":"774:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"835:71:1","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":182,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"account","nameLocation":"938:7:1","nodeType":"VariableDeclaration","scope":182,"src":"930:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:1"},"returnParameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"970:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:1"},"scope":225,"src":"911:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"985:213:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"1229:2:1","nodeType":"VariableDeclaration","scope":192,"src":"1221:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"1241:5:1","nodeType":"VariableDeclaration","scope":192,"src":"1233:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"1266:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:1"},"scope":225,"src":"1203:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1278:264:1","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:1","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"owner","nameLocation":"1574:5:1","nodeType":"VariableDeclaration","scope":202,"src":"1566:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"spender","nameLocation":"1589:7:1","nodeType":"VariableDeclaration","scope":202,"src":"1581:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":202,"src":"1621:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:1"},"scope":225,"src":"1547:83:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"1636:667:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"spender","nameLocation":"2333:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2325:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"value","nameLocation":"2350:5:1","nodeType":"VariableDeclaration","scope":212,"src":"2342:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"2375:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:1"},"scope":225,"src":"2308:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"2387:297:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"from","nameLocation":"2719:4:1","nodeType":"VariableDeclaration","scope":224,"src":"2711:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"to","nameLocation":"2733:2:1","nodeType":"VariableDeclaration","scope":224,"src":"2725:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":219,"mutability":"mutable","name":"value","nameLocation":"2745:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2737:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2770:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":221,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:1"},"scope":225,"src":"2689:87:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":226,"src":"203:2575:1","usedErrors":[],"usedEvents":[159,168]}],"src":"106:2673:1"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[261]},"id":262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"149:1963:2","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":261,"linearizedBaseContracts":[261],"name":"IERC20Permit","nameLocation":"2123:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"2142:850:2","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:2","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"owner","nameLocation":"3030:5:2","nodeType":"VariableDeclaration","scope":246,"src":"3022:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":230,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"spender","nameLocation":"3053:7:2","nodeType":"VariableDeclaration","scope":246,"src":"3045:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"value","nameLocation":"3078:5:2","nodeType":"VariableDeclaration","scope":246,"src":"3070:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:2","nodeType":"VariableDeclaration","scope":246,"src":"3093:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"v","nameLocation":"3125:1:2","nodeType":"VariableDeclaration","scope":246,"src":"3119:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":238,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"r","nameLocation":"3144:1:2","nodeType":"VariableDeclaration","scope":246,"src":"3136:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"s","nameLocation":"3163:1:2","nodeType":"VariableDeclaration","scope":246,"src":"3155:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"3179:0:2"},"scope":261,"src":"2997:183:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"3186:294:2","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"owner","nameLocation":"3509:5:2","nodeType":"VariableDeclaration","scope":254,"src":"3501:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"3539:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:2"},"scope":261,"src":"3485:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"3554:128:2","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"3765:2:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":260,"src":"3791:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:2"},"scope":261,"src":"3740:60:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":262,"src":"2113:1689:2","usedErrors":[],"usedEvents":[]}],"src":"123:3680:2"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[804],"IERC20":[225],"IERC20Permit":[261],"SafeERC20":[551]},"id":552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":552,"sourceUnit":226,"src":"141:37:3","symbolAliases":[{"foreign":{"id":264,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"149:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":552,"sourceUnit":262,"src":"179:60:3","symbolAliases":[{"foreign":{"id":266,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"187:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":552,"sourceUnit":805,"src":"240:51:3","symbolAliases":[{"foreign":{"id":268,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"248:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"293:457:3","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":551,"linearizedBaseContracts":[551],"name":"SafeERC20","nameLocation":"759:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":273,"libraryName":{"id":271,"name":"Address","nameLocations":["781:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":804,"src":"781:7:3"},"nodeType":"UsingForDirective","src":"775:26:3","typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"807:64:3","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":278,"name":"SafeERC20FailedOperation","nameLocation":"882:24:3","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"token","nameLocation":"915:5:3","nodeType":"VariableDeclaration","scope":278,"src":"907:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:3"},"src":"876:46:3"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"928:71:3","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":287,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:3","nodeType":"ErrorDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"1051:7:3","nodeType":"VariableDeclaration","scope":287,"src":"1043:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:3","nodeType":"VariableDeclaration","scope":287,"src":"1060:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:3","nodeType":"VariableDeclaration","scope":287,"src":"1086:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:3"},"src":"1004:109:3"},{"body":{"id":310,"nodeType":"Block","src":"1375:88:3","statements":[{"expression":{"arguments":[{"id":299,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"1405:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":302,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"1427:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:3","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":192,"src":"1427:14:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":304,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"1444:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1448:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":300,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":298,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1385:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"1385:71:3"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"1119:179:3","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":311,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:3","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"token","nameLocation":"1332:5:3","nodeType":"VariableDeclaration","scope":311,"src":"1325:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":290,"nodeType":"UserDefinedTypeName","pathNode":{"id":289,"name":"IERC20","nameLocations":["1325:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"1325:6:3"},"referencedDeclaration":225,"src":"1325:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":293,"mutability":"mutable","name":"to","nameLocation":"1347:2:3","nodeType":"VariableDeclaration","scope":311,"src":"1339:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"value","nameLocation":"1359:5:3","nodeType":"VariableDeclaration","scope":311,"src":"1351:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:3"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"1375:0:3"},"scope":551,"src":"1303:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":337,"nodeType":"Block","src":"1792:98:3","statements":[{"expression":{"arguments":[{"id":325,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1822:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":328,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1844:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:3","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":224,"src":"1844:18:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":330,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1865:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1871:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"1875:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":324,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1802:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"ExpressionStatement","src":"1802:81:3"}]},"documentation":{"id":312,"nodeType":"StructuredDocumentation","src":"1469:228:3","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":338,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:3","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"token","nameLocation":"1735:5:3","nodeType":"VariableDeclaration","scope":338,"src":"1728:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":314,"nodeType":"UserDefinedTypeName","pathNode":{"id":313,"name":"IERC20","nameLocations":["1728:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"1728:6:3"},"referencedDeclaration":225,"src":"1728:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"from","nameLocation":"1750:4:3","nodeType":"VariableDeclaration","scope":338,"src":"1742:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"to","nameLocation":"1764:2:3","nodeType":"VariableDeclaration","scope":338,"src":"1756:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"value","nameLocation":"1776:5:3","nodeType":"VariableDeclaration","scope":338,"src":"1768:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:3"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"1792:0:3"},"scope":551,"src":"1702:188:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"2167:139:3","statements":[{"assignments":[350],"declarations":[{"constant":false,"id":350,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:3","nodeType":"VariableDeclaration","scope":368,"src":"2177:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":359,"initialValue":{"arguments":[{"arguments":[{"id":355,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$551","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$551","typeString":"library SafeERC20"}],"id":354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:3","typeDescriptions":{}}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":357,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2231:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":351,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2200:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":202,"src":"2200:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:3"},{"expression":{"arguments":[{"id":361,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2262:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":362,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"2269:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2278:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2293:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2249:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":367,"nodeType":"ExpressionStatement","src":"2249:50:3"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"1896:180:3","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":369,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"token","nameLocation":"2119:5:3","nodeType":"VariableDeclaration","scope":369,"src":"2112:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"IERC20","nameLocations":["2112:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"2112:6:3"},"referencedDeclaration":225,"src":"2112:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"2134:7:3","nodeType":"VariableDeclaration","scope":369,"src":"2126:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"value","nameLocation":"2151:5:3","nodeType":"VariableDeclaration","scope":369,"src":"2143:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:3"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"2167:0:3"},"scope":551,"src":"2081:225:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":411,"nodeType":"Block","src":"2607:370:3","statements":[{"id":410,"nodeType":"UncheckedBlock","src":"2617:354:3","statements":[{"assignments":[381],"declarations":[{"constant":false,"id":381,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:3","nodeType":"VariableDeclaration","scope":410,"src":"2641:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":390,"initialValue":{"arguments":[{"arguments":[{"id":386,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$551","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$551","typeString":"library SafeERC20"}],"id":385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:3","typeDescriptions":{}}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":388,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2699:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":382,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2668:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:3","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":202,"src":"2668:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2725:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":392,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2744:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":401,"nodeType":"IfStatement","src":"2721:160:3","trueBody":{"id":400,"nodeType":"Block","src":"2763:118:3","statements":[{"errorCall":{"arguments":[{"id":395,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2821:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":396,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2830:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":397,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2848:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2788:32:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"RevertStatement","src":"2781:85:3"}]}},{"expression":{"arguments":[{"id":403,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2907:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":404,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"2914:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":405,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"2923:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":406,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2942:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":402,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"2894:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"2894:66:3"}]}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2312:192:3","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:3","nodeType":"FunctionDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"token","nameLocation":"2547:5:3","nodeType":"VariableDeclaration","scope":412,"src":"2540:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":372,"nodeType":"UserDefinedTypeName","pathNode":{"id":371,"name":"IERC20","nameLocations":["2540:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"2540:6:3"},"referencedDeclaration":225,"src":"2540:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"spender","nameLocation":"2562:7:3","nodeType":"VariableDeclaration","scope":412,"src":"2554:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":377,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:3","nodeType":"VariableDeclaration","scope":412,"src":"2571:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"2607:0:3"},"scope":551,"src":"2509:468:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":458,"nodeType":"Block","src":"3373:303:3","statements":[{"assignments":[424],"declarations":[{"constant":false,"id":424,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:3","nodeType":"VariableDeclaration","scope":458,"src":"3383:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[{"expression":{"id":427,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3426:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3426:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":429,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3442:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3451:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:3"},{"condition":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:3","subExpression":{"arguments":[{"id":435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3498:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":436,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3505:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":434,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3474:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"IfStatement","src":"3469:201:3","trueBody":{"id":456,"nodeType":"Block","src":"3520:150:3","statements":[{"expression":{"arguments":[{"id":440,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3554:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":443,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3576:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:3","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":212,"src":"3576:13:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":445,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"3592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:3","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":439,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3534:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"3534:71:3"},{"expression":{"arguments":[{"id":452,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"3639:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},{"id":453,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3646:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":451,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3619:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"3619:40:3"}]}}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2983:308:3","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:3","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"token","nameLocation":"3325:5:3","nodeType":"VariableDeclaration","scope":459,"src":"3318:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"IERC20","nameLocations":["3318:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"3318:6:3"},"referencedDeclaration":225,"src":"3318:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"spender","nameLocation":"3340:7:3","nodeType":"VariableDeclaration","scope":459,"src":"3332:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"value","nameLocation":"3357:5:3","nodeType":"VariableDeclaration","scope":459,"src":"3349:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:3"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"3373:0:3"},"scope":551,"src":"3296:380:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":500,"nodeType":"Block","src":"4129:559:3","statements":[{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:3","nodeType":"VariableDeclaration","scope":500,"src":"4478:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":468,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":477,"initialValue":{"arguments":[{"id":475,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4532:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":472,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4512:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":470,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:3","typeDescriptions":{}}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:3","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":625,"src":"4504:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":478,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4551:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:3","memberName":"length","nodeType":"MemberAccess","src":"4551:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:3","subExpression":{"arguments":[{"id":484,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"4589:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":485,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:3","typeDescriptions":{}}}],"id":487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":482,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:3","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"nodeType":"IfStatement","src":"4547:135:3","trueBody":{"id":498,"nodeType":"Block","src":"4610:72:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4664:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:3","typeDescriptions":{}}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4631:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"RevertStatement","src":"4624:47:3"}]}}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"3682:372:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":501,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:3","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"token","nameLocation":"4095:5:3","nodeType":"VariableDeclaration","scope":501,"src":"4088:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":462,"nodeType":"UserDefinedTypeName","pathNode":{"id":461,"name":"IERC20","nameLocations":["4088:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"4088:6:3"},"referencedDeclaration":225,"src":"4088:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"data","nameLocation":"4115:4:3","nodeType":"VariableDeclaration","scope":501,"src":"4102:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":464,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:3"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[],"src":"4129:0:3"},"scope":551,"src":"4059:629:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":549,"nodeType":"Block","src":"5278:489:3","statements":[{"assignments":[513,515],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"success","nameLocation":"5579:7:3","nodeType":"VariableDeclaration","scope":549,"src":"5574:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":512,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:3","nodeType":"VariableDeclaration","scope":549,"src":"5588:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":523,"initialValue":{"arguments":[{"id":521,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5635:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":518,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5623:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:3","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:3","memberName":"call","nodeType":"MemberAccess","src":"5615:19:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:3"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":524,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"5657:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":525,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5669:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:3","memberName":"length","nodeType":"MemberAccess","src":"5669:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":531,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"5706:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:3","typeDescriptions":{}}}],"id":534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:3","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":541,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5738:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:3","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:3","memberName":"code","nodeType":"MemberAccess","src":"5730:19:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:3","memberName":"length","nodeType":"MemberAccess","src":"5730:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":511,"id":548,"nodeType":"Return","src":"5650:110:3"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"4694:490:3","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":550,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:3","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"token","nameLocation":"5229:5:3","nodeType":"VariableDeclaration","scope":550,"src":"5222:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"},"typeName":{"id":504,"nodeType":"UserDefinedTypeName","pathNode":{"id":503,"name":"IERC20","nameLocations":["5222:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"5222:6:3"},"referencedDeclaration":225,"src":"5222:6:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":507,"mutability":"mutable","name":"data","nameLocation":"5249:4:3","nodeType":"VariableDeclaration","scope":550,"src":"5236:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":506,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:3"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"5272:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:3"},"scope":551,"src":"5189:578:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":552,"src":"751:5018:3","usedErrors":[278,287],"usedEvents":[]}],"src":"115:5655:3"}},"@openzeppelin/contracts/utils/Address.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[804]},"id":805,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"127:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":804,"linearizedBaseContracts":[804],"name":"Address","nameLocation":"203:7:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"217:94:4","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":559,"name":"AddressInsufficientBalance","nameLocation":"322:26:4","nodeType":"ErrorDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"account","nameLocation":"357:7:4","nodeType":"VariableDeclaration","scope":559,"src":"349:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:4"},"src":"316:50:4"},{"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"372:75:4","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":564,"name":"AddressEmptyCode","nameLocation":"458:16:4","nodeType":"ErrorDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"target","nameLocation":"483:6:4","nodeType":"VariableDeclaration","scope":564,"src":"475:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:4"},"src":"452:39:4"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"497:89:4","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":567,"name":"FailedInnerCall","nameLocation":"597:15:4","nodeType":"ErrorDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"612:2:4"},"src":"591:24:4"},{"body":{"id":607,"nodeType":"Block","src":"1602:260:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":577,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}],"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:4","typeDescriptions":{}}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:4","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":580,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1640:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"nodeType":"IfStatement","src":"1612:109:4","trueBody":{"id":589,"nodeType":"Block","src":"1648:73:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":585,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:4","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"1669:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"RevertStatement","src":"1662:48:4"}]}},{"assignments":[592,null],"declarations":[{"constant":false,"id":592,"mutability":"mutable","name":"success","nameLocation":"1737:7:4","nodeType":"VariableDeclaration","scope":607,"src":"1732:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":599,"initialValue":{"arguments":[{"hexValue":"","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":593,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"1750:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:4","memberName":"call","nodeType":"MemberAccess","src":"1750:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":595,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1772:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:4"},{"condition":{"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:4","subExpression":{"id":600,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1798:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":606,"nodeType":"IfStatement","src":"1793:63:4","trueBody":{"id":605,"nodeType":"Block","src":"1807:49:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":602,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"1828:15:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"RevertStatement","src":"1821:24:4"}]}}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"621:905:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":608,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:4","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:4","nodeType":"VariableDeclaration","scope":608,"src":"1550:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"amount","nameLocation":"1585:6:4","nodeType":"VariableDeclaration","scope":608,"src":"1577:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"1602:0:4"},"scope":804,"src":"1531:331:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":624,"nodeType":"Block","src":"2794:62:4","statements":[{"expression":{"arguments":[{"id":619,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"2833:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2841:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":618,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"2811:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":617,"id":623,"nodeType":"Return","src":"2804:45:4"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"1868:832:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:4","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":611,"mutability":"mutable","name":"target","nameLocation":"2735:6:4","nodeType":"VariableDeclaration","scope":625,"src":"2727:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"data","nameLocation":"2756:4:4","nodeType":"VariableDeclaration","scope":625,"src":"2743:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":612,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:4"},"returnParameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"2780:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":615,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:4"},"scope":804,"src":"2705:151:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":670,"nodeType":"Block","src":"3293:279:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":639,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}],"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:4","typeDescriptions":{}}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:4","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3331:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":652,"nodeType":"IfStatement","src":"3303:108:4","trueBody":{"id":651,"nodeType":"Block","src":"3338:73:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":647,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$804","typeString":"library Address"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:4","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":644,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3359:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"RevertStatement","src":"3352:48:4"}]}},{"assignments":[654,656],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"success","nameLocation":"3426:7:4","nodeType":"VariableDeclaration","scope":670,"src":"3421:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":653,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:4","nodeType":"VariableDeclaration","scope":670,"src":"3435:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":655,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":663,"initialValue":{"arguments":[{"id":661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3488:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3462:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:4","memberName":"call","nodeType":"MemberAccess","src":"3462:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3481:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:4"},{"expression":{"arguments":[{"id":665,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3537:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3545:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":667,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"3554:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":664,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"3510:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":636,"id":669,"nodeType":"Return","src":"3503:62:4"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"2862:313:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":671,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:4","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"target","nameLocation":"3219:6:4","nodeType":"VariableDeclaration","scope":671,"src":"3211:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"data","nameLocation":"3240:4:4","nodeType":"VariableDeclaration","scope":671,"src":"3227:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":629,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"value","nameLocation":"3254:5:4","nodeType":"VariableDeclaration","scope":671,"src":"3246:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:4"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":671,"src":"3279:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":634,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:4"},"scope":804,"src":"3180:392:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":696,"nodeType":"Block","src":"3811:154:4","statements":[{"assignments":[682,684],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"success","nameLocation":"3827:7:4","nodeType":"VariableDeclaration","scope":696,"src":"3822:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:4","nodeType":"VariableDeclaration","scope":696,"src":"3836:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":689,"initialValue":{"arguments":[{"id":687,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3881:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":685,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"3863:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:4","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:4"},{"expression":{"arguments":[{"id":691,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"3930:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3938:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":693,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3947:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":690,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"3903:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":680,"id":695,"nodeType":"Return","src":"3896:62:4"}]},"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"3578:128:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":697,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:4","nodeType":"FunctionDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"target","nameLocation":"3747:6:4","nodeType":"VariableDeclaration","scope":697,"src":"3739:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":676,"mutability":"mutable","name":"data","nameLocation":"3768:4:4","nodeType":"VariableDeclaration","scope":697,"src":"3755:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":675,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:4"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":697,"src":"3797:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:4"},"scope":804,"src":"3711:254:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"4203:156:4","statements":[{"assignments":[708,710],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"success","nameLocation":"4219:7:4","nodeType":"VariableDeclaration","scope":722,"src":"4214:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":707,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:4","nodeType":"VariableDeclaration","scope":722,"src":"4228:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"id":713,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"4275:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":711,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4255:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:4","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:4"},{"expression":{"arguments":[{"id":717,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"4324:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"4332:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":719,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4341:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":716,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"4297:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":706,"id":721,"nodeType":"Return","src":"4290:62:4"}]},"documentation":{"id":698,"nodeType":"StructuredDocumentation","src":"3971:130:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:4","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"target","nameLocation":"4144:6:4","nodeType":"VariableDeclaration","scope":723,"src":"4136:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"data","nameLocation":"4165:4:4","nodeType":"VariableDeclaration","scope":723,"src":"4152:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:4"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"4189:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":704,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:4"},"scope":804,"src":"4106:253:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":762,"nodeType":"Block","src":"4783:424:4","statements":[{"condition":{"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:4","subExpression":{"id":735,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"4798:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":760,"nodeType":"Block","src":"4857:344:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":742,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5045:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:4","memberName":"length","nodeType":"MemberAccess","src":"5045:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":746,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5071:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:4","memberName":"code","nodeType":"MemberAccess","src":"5071:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:4","memberName":"length","nodeType":"MemberAccess","src":"5071:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":757,"nodeType":"IfStatement","src":"5041:119:4","trueBody":{"id":756,"nodeType":"Block","src":"5096:64:4","statements":[{"errorCall":{"arguments":[{"id":753,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"5138:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"5121:16:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"RevertStatement","src":"5114:31:4"}]}},{"expression":{"id":758,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"5180:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":734,"id":759,"nodeType":"Return","src":"5173:17:4"}]},"id":761,"nodeType":"IfStatement","src":"4793:408:4","trueBody":{"id":741,"nodeType":"Block","src":"4807:44:4","statements":[{"expression":{"arguments":[{"id":738,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"4829:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":737,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"4821:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"4821:19:4"}]}}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"4365:255:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":763,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:4","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"target","nameLocation":"4678:6:4","nodeType":"VariableDeclaration","scope":763,"src":"4670:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"success","nameLocation":"4699:7:4","nodeType":"VariableDeclaration","scope":763,"src":"4694:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":727,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:4","nodeType":"VariableDeclaration","scope":763,"src":"4716:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":729,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:4"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"4769:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":732,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:4"},"scope":804,"src":"4625:582:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":784,"nodeType":"Block","src":"5509:122:4","statements":[{"condition":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:4","subExpression":{"id":773,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"5524:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":782,"nodeType":"Block","src":"5583:42:4","statements":[{"expression":{"id":780,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5604:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"5597:17:4"}]},"id":783,"nodeType":"IfStatement","src":"5519:106:4","trueBody":{"id":779,"nodeType":"Block","src":"5533:44:4","statements":[{"expression":{"arguments":[{"id":776,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"5555:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":775,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5547:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"5547:19:4"}]}}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"5213:189:4","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:4","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"success","nameLocation":"5438:7:4","nodeType":"VariableDeclaration","scope":785,"src":"5433:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:4","nodeType":"VariableDeclaration","scope":785,"src":"5447:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":767,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:4"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":785,"src":"5495:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":770,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:4"},"scope":804,"src":"5407:224:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"5798:461:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":791,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5874:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:4","memberName":"length","nodeType":"MemberAccess","src":"5874:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":800,"nodeType":"Block","src":"6204:49:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":797,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6225:15:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"RevertStatement","src":"6218:24:4"}]},"id":801,"nodeType":"IfStatement","src":"5870:383:4","trueBody":{"id":796,"nodeType":"Block","src":"5897:301:4","statements":[{"AST":{"nativeSrc":"6055:133:4","nodeType":"YulBlock","src":"6055:133:4","statements":[{"nativeSrc":"6073:40:4","nodeType":"YulVariableDeclaration","src":"6073:40:4","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:4","nodeType":"YulIdentifier","src":"6102:10:4"}],"functionName":{"name":"mload","nativeSrc":"6096:5:4","nodeType":"YulIdentifier","src":"6096:5:4"},"nativeSrc":"6096:17:4","nodeType":"YulFunctionCall","src":"6096:17:4"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:4","nodeType":"YulTypedName","src":"6077:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:4","nodeType":"YulLiteral","src":"6141:2:4","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:4","nodeType":"YulIdentifier","src":"6145:10:4"}],"functionName":{"name":"add","nativeSrc":"6137:3:4","nodeType":"YulIdentifier","src":"6137:3:4"},"nativeSrc":"6137:19:4","nodeType":"YulFunctionCall","src":"6137:19:4"},{"name":"returndata_size","nativeSrc":"6158:15:4","nodeType":"YulIdentifier","src":"6158:15:4"}],"functionName":{"name":"revert","nativeSrc":"6130:6:4","nodeType":"YulIdentifier","src":"6130:6:4"},"nativeSrc":"6130:44:4","nodeType":"YulFunctionCall","src":"6130:44:4"},"nativeSrc":"6130:44:4","nodeType":"YulExpressionStatement","src":"6130:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":788,"isOffset":false,"isSlot":false,"src":"6102:10:4","valueSize":1},{"declaration":788,"isOffset":false,"isSlot":false,"src":"6145:10:4","valueSize":1}],"id":795,"nodeType":"InlineAssembly","src":"6046:142:4"}]}}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"5637:101:4","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:4","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:4","nodeType":"VariableDeclaration","scope":803,"src":"5760:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:4"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"5798:0:4"},"scope":804,"src":"5743:516:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":805,"src":"195:6066:4","usedErrors":[559,564,567],"usedEvents":[]}],"src":"101:6161:4"}},"@openzeppelin/contracts/utils/Context.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[834]},"id":835,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":806,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":834,"linearizedBaseContracts":[834],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":815,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":811,"id":814,"nodeType":"Return","src":"728:17:5"}]},"id":816,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":816,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":834,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":824,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":820,"id":823,"nodeType":"Return","src":"835:15:5"}]},"id":825,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":825,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":818,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":834,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":829,"id":831,"nodeType":"Return","src":"945:8:5"}]},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":834,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":835,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":836,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"135:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":903,"linearizedBaseContracts":[903],"name":"ReentrancyGuard","nameLocation":"904:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":840,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:6","nodeType":"VariableDeclaration","scope":903,"src":"1674:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":843,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:6","nodeType":"VariableDeclaration","scope":903,"src":"1720:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":845,"mutability":"mutable","name":"_status","nameLocation":"1779:7:6","nodeType":"VariableDeclaration","scope":903,"src":"1763:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"1793:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":848,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:6","nodeType":"ErrorDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"1884:2:6"},"src":"1850:37:6"},{"body":{"id":855,"nodeType":"Block","src":"1907:38:6","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":851,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1917:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"1927:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ExpressionStatement","src":"1917:21:6"}]},"id":856,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"1904:2:6"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1907:0:6"},"scope":903,"src":"1893:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"2346:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":859,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":883,"src":"2356:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"2356:21:6"},{"id":862,"nodeType":"PlaceholderStatement","src":"2387:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"2398:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"2398:20:6"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"1951:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":867,"name":"nonReentrant","nameLocation":"2331:12:6","nodeType":"ModifierDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[],"src":"2343:2:6"},"src":"2322:103:6","virtual":false,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"2470:268:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2558:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":871,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2569:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"2554:86:6","trueBody":{"id":876,"nodeType":"Block","src":"2578:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":873,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2599:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"RevertStatement","src":"2592:37:6"}]}},{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":878,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2724:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"2714:17:6"}]},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:6","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[],"src":"2459:2:6"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"2470:0:6"},"scope":903,"src":"2431:307:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":890,"nodeType":"Block","src":"2782:170:6","statements":[{"expression":{"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":886,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"2924:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":887,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"2934:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"nodeType":"ExpressionStatement","src":"2924:21:6"}]},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:6","nodeType":"FunctionDefinition","parameters":{"id":884,"nodeType":"ParameterList","parameters":[],"src":"2771:2:6"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"2782:0:6"},"scope":903,"src":"2744:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":901,"nodeType":"Block","src":"3195:42:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":898,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":896,"id":900,"nodeType":"Return","src":"3205:25:6"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"2958:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":902,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:6","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[],"src":"3163:2:6"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"3189:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":894,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:6"},"scope":903,"src":"3131:106:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":904,"src":"886:2353:6","usedErrors":[848],"usedEvents":[]}],"src":"109:3131:6"}},"contracts/Bridge.sol":{"id":7,"ast":{"absolutePath":"contracts/Bridge.sol","exportedSymbols":{"Address":[804],"Bridge":[1556],"IERC20":[225],"IERC20Permit":[261],"Ownable":[147],"ReentrancyGuard":[903],"SafeERC20":[551]},"id":1557,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"39:24:7"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":907,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":148,"src":"64:69:7","symbolAliases":[{"foreign":{"id":906,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"73:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":552,"src":"134:65:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":226,"src":"200:56:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":805,"src":"257:51:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1557,"sourceUnit":904,"src":"309:59:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":912,"name":"Ownable","nameLocations":["465:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"465:7:7"},"id":913,"nodeType":"InheritanceSpecifier","src":"465:7:7"},{"baseName":{"id":914,"name":"ReentrancyGuard","nameLocations":["474:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"474:15:7"},"id":915,"nodeType":"InheritanceSpecifier","src":"474:15:7"}],"canonicalName":"Bridge","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1556,"linearizedBaseContracts":[1556,903,147,834],"name":"Bridge","nameLocation":"455:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":919,"libraryName":{"id":916,"name":"SafeERC20","nameLocations":["500:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"500:9:7"},"nodeType":"UsingForDirective","src":"494:27:7","typeName":{"id":918,"nodeType":"UserDefinedTypeName","pathNode":{"id":917,"name":"IERC20","nameLocations":["514:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":225,"src":"514:6:7"},"referencedDeclaration":225,"src":"514:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}}},{"global":false,"id":922,"libraryName":{"id":920,"name":"Address","nameLocations":["530:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":804,"src":"530:7:7"},"nodeType":"UsingForDirective","src":"524:34:7","typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"542:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}},{"errorSelector":"4e630899","id":924,"name":"OnlyEnabled","nameLocation":"568:11:7","nodeType":"ErrorDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"579:2:7"},"src":"562:20:7"},{"errorSelector":"3728b83d","id":928,"name":"InvalidAmount","nameLocation":"591:13:7","nodeType":"ErrorDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"amount","nameLocation":"613:6:7","nodeType":"VariableDeclaration","scope":928,"src":"605:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"604:16:7"},"src":"585:36:7"},{"errorSelector":"7626db82","id":930,"name":"InvalidProvider","nameLocation":"630:15:7","nodeType":"ErrorDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[],"src":"645:2:7"},"src":"624:24:7"},{"errorSelector":"44d99fea","id":932,"name":"InvalidRecipientAddress","nameLocation":"657:23:7","nodeType":"ErrorDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[],"src":"680:2:7"},"src":"651:32:7"},{"errorSelector":"a1ba07ee","id":934,"name":"InvalidArgs","nameLocation":"692:11:7","nodeType":"ErrorDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"703:2:7"},"src":"686:20:7"},{"errorSelector":"aa7feadc","id":936,"name":"InvalidValue","nameLocation":"715:12:7","nodeType":"ErrorDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"727:2:7"},"src":"709:21:7"},{"errorSelector":"ba198589","id":938,"name":"AmountMustEqualValue","nameLocation":"739:20:7","nodeType":"ErrorDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"src":"733:29:7"},{"errorSelector":"f75f9e9f","id":940,"name":"ParamsError","nameLocation":"771:11:7","nodeType":"ErrorDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[],"src":"782:2:7"},"src":"765:20:7"},{"errorSelector":"5daa87a0","id":942,"name":"Initialized","nameLocation":"794:11:7","nodeType":"ErrorDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"805:2:7"},"src":"788:20:7"},{"anonymous":false,"eventSelector":"297f17d10090e4dfa4e81099935283e1484b1f7138b03587e42793e2b091fa1d","id":956,"name":"Bridged","nameLocation":"818:7:7","nodeType":"EventDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"834:6:7","nodeType":"VariableDeclaration","scope":956,"src":"826:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"indexed":false,"mutability":"mutable","name":"provider","nameLocation":"850:8:7","nodeType":"VariableDeclaration","scope":956,"src":"842:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"842:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"868:5:7","nodeType":"VariableDeclaration","scope":956,"src":"860:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"883:6:7","nodeType":"VariableDeclaration","scope":956,"src":"875:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":952,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"897:8:7","nodeType":"VariableDeclaration","scope":956,"src":"891:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":951,"name":"bytes","nodeType":"ElementaryTypeName","src":"891:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":954,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"915:5:7","nodeType":"VariableDeclaration","scope":956,"src":"907:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"825:96:7"},"src":"812:110:7"},{"anonymous":false,"eventSelector":"d42158eb0ea2dc2dce92d3cd105f32a6a4dbc2016fd376f6adbd28bb3dc7b3fb","id":970,"name":"Released","nameLocation":"931:8:7","nodeType":"EventDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"948:9:7","nodeType":"VariableDeclaration","scope":970,"src":"940:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"indexed":false,"mutability":"mutable","name":"provider","nameLocation":"967:8:7","nodeType":"VariableDeclaration","scope":970,"src":"959:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"985:5:7","nodeType":"VariableDeclaration","scope":970,"src":"977:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"977:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":964,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1000:6:7","nodeType":"VariableDeclaration","scope":970,"src":"992:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":966,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"1014:8:7","nodeType":"VariableDeclaration","scope":970,"src":"1008:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":965,"name":"bytes","nodeType":"ElementaryTypeName","src":"1008:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":968,"indexed":false,"mutability":"mutable","name":"index","nameLocation":"1032:5:7","nodeType":"VariableDeclaration","scope":970,"src":"1024:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":967,"name":"uint256","nodeType":"ElementaryTypeName","src":"1024:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"939:99:7"},"src":"925:114:7"},{"anonymous":false,"eventSelector":"3659fce67df53590a7b123b78110e4a82622aed9b1078a60fe06aa6072113644","id":974,"name":"EnableChanged","nameLocation":"1048:13:7","nodeType":"EventDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"indexed":false,"mutability":"mutable","name":"isEnabled","nameLocation":"1067:9:7","nodeType":"VariableDeclaration","scope":974,"src":"1062:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":971,"name":"bool","nodeType":"ElementaryTypeName","src":"1062:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1061:16:7"},"src":"1042:36:7"},{"canonicalName":"Bridge.BridgeStorage","id":999,"members":[{"constant":false,"id":976,"mutability":"mutable","name":"isEnabled","nameLocation":"1114:9:7","nodeType":"VariableDeclaration","scope":999,"src":"1109:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":975,"name":"bool","nodeType":"ElementaryTypeName","src":"1109:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"initialized","nameLocation":"1134:11:7","nodeType":"VariableDeclaration","scope":999,"src":"1129:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":977,"name":"bool","nodeType":"ElementaryTypeName","src":"1129:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"bridgeIndexs","nameLocation":"1179:12:7","nodeType":"VariableDeclaration","scope":999,"src":"1151:40:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":981,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1151:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"releaseIndexs","nameLocation":"1225:13:7","nodeType":"VariableDeclaration","scope":999,"src":"1197:41:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":985,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1197:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"bridges","nameLocation":"1290:7:7","nodeType":"VariableDeclaration","scope":999,"src":"1244:53:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes))"},"typeName":{"id":991,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1244:45:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":990,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1263:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":989,"name":"bytes","nodeType":"ElementaryTypeName","src":"1282:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"releases","nameLocation":"1349:8:7","nodeType":"VariableDeclaration","scope":999,"src":"1303:54:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes))"},"typeName":{"id":997,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1303:45:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":996,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1322:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"1341:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}}},"visibility":"internal"}],"name":"BridgeStorage","nameLocation":"1089:13:7","nodeType":"StructDefinition","scope":1556,"src":"1082:280:7","visibility":"public"},{"body":{"id":1012,"nodeType":"Block","src":"1428:116:7","statements":[{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"position","nameLocation":"1442:8:7","nodeType":"VariableDeclaration","scope":1012,"src":"1434:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1434:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1010,"initialValue":{"arguments":[{"hexValue":"4272696467652e636f6e74726163742e73746f726167652e7631","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1463:28:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7","typeString":"literal_string \"Bridge.contract.storage.v1\""},"value":"Bridge.contract.storage.v1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7","typeString":"literal_string \"Bridge.contract.storage.v1\""}],"id":1007,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1453:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1453:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1434:58:7"},{"AST":{"nativeSrc":"1507:33:7","nodeType":"YulBlock","src":"1507:33:7","statements":[{"nativeSrc":"1515:19:7","nodeType":"YulAssignment","src":"1515:19:7","value":{"name":"position","nativeSrc":"1526:8:7","nodeType":"YulIdentifier","src":"1526:8:7"},"variableNames":[{"name":"cs.slot","nativeSrc":"1515:7:7","nodeType":"YulIdentifier","src":"1515:7:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1003,"isOffset":false,"isSlot":true,"src":"1515:7:7","suffix":"slot","valueSize":1},{"declaration":1006,"isOffset":false,"isSlot":false,"src":"1526:8:7","valueSize":1}],"id":1011,"nodeType":"InlineAssembly","src":"1498:42:7"}]},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"s","nameLocation":"1375:1:7","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"1376:2:7"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"cs","nameLocation":"1424:2:7","nodeType":"VariableDeclaration","scope":1013,"src":"1402:24:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage"},"typeName":{"id":1002,"nodeType":"UserDefinedTypeName","pathNode":{"id":1001,"name":"BridgeStorage","nameLocations":["1402:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"1402:13:7"},"referencedDeclaration":999,"src":"1402:13:7","typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage"}},"visibility":"internal"}],"src":"1401:26:7"},"scope":1556,"src":"1366:178:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"1571:72:7","statements":[{"condition":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1581:14:7","subExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1015,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1582:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1582:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1586:9:7","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":976,"src":"1582:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"nodeType":"IfStatement","src":"1577:55:7","trueBody":{"id":1022,"nodeType":"Block","src":"1597:35:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1019,"name":"OnlyEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"1612:11:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1612:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"RevertStatement","src":"1605:20:7"}]}},{"id":1024,"nodeType":"PlaceholderStatement","src":"1637:1:7"}]},"id":1026,"name":"onlyEnabled","nameLocation":"1557:11:7","nodeType":"ModifierDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"1568:2:7"},"src":"1548:95:7","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"1681:2:7","statements":[]},"id":1034,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":1029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1669:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1673:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1669:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1031,"kind":"baseConstructorSpecifier","modifierName":{"id":1028,"name":"Ownable","nameLocations":["1661:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1661:7:7"},"nodeType":"ModifierInvocation","src":"1661:19:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"1658:2:7"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"1681:0:7"},"scope":1556,"src":"1647:36:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1060,"nodeType":"Block","src":"1743:113:7","statements":[{"condition":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1041,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1757:11:7","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":978,"src":"1753:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1047,"nodeType":"IfStatement","src":"1749:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1044,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"1777:11:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1777:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"RevertStatement","src":"1770:20:7"}},{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1048,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1797:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1801:9:7","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":976,"src":"1797:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1051,"name":"_isEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"1813:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1797:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"nodeType":"ExpressionStatement","src":"1797:26:7"},{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1054,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1829:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1833:11:7","memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":978,"src":"1829:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1847:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1829:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1059,"nodeType":"ExpressionStatement","src":"1829:22:7"}]},"functionSelector":"d53a822f","id":1061,"implemented":true,"kind":"function","modifiers":[{"id":1039,"kind":"modifierInvocation","modifierName":{"id":1038,"name":"onlyOwner","nameLocations":["1733:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1733:9:7"},"nodeType":"ModifierInvocation","src":"1733:9:7"}],"name":"initialize","nameLocation":"1696:10:7","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"_isEnabled","nameLocation":"1712:10:7","nodeType":"VariableDeclaration","scope":1061,"src":"1707:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1035,"name":"bool","nodeType":"ElementaryTypeName","src":"1707:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1706:17:7"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[],"src":"1743:0:7"},"scope":1556,"src":"1687:169:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1078,"nodeType":"Block","src":"1918:74:7","statements":[{"expression":{"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1068,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"1924:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1928:9:7","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":976,"src":"1924:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1071,"name":"_isEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1940:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1924:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1073,"nodeType":"ExpressionStatement","src":"1924:26:7"},{"eventCall":{"arguments":[{"id":1075,"name":"_isEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"1976:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1074,"name":"EnableChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"1962:13:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bool_$returns$__$","typeString":"function (bool)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"EmitStatement","src":"1957:30:7"}]},"functionSelector":"b6f97501","id":1079,"implemented":true,"kind":"function","modifiers":[{"id":1066,"kind":"modifierInvocation","modifierName":{"id":1065,"name":"onlyOwner","nameLocations":["1908:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1908:9:7"},"nodeType":"ModifierInvocation","src":"1908:9:7"}],"name":"setIsEnabled","nameLocation":"1869:12:7","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"_isEnabled","nameLocation":"1887:10:7","nodeType":"VariableDeclaration","scope":1079,"src":"1882:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1062,"name":"bool","nodeType":"ElementaryTypeName","src":"1882:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1881:17:7"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"1918:0:7"},"scope":1556,"src":"1860:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1182,"nodeType":"Block","src":"2134:565:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1094,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2144:8:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2156:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:7","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2156:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2144:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1103,"nodeType":"IfStatement","src":"2140:52:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1100,"name":"InvalidProvider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2175:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"RevertStatement","src":"2168:24:7"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1104,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2202:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2202:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1111,"nodeType":"IfStatement","src":"2198:45:7","trueBody":{"errorCall":{"arguments":[{"id":1108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2236:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1107,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"2222:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2222:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"RevertStatement","src":"2215:28:7"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1112,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2253:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2270:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2262:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:7","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2253:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2276:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2286:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2290:5:7","memberName":"value","nodeType":"MemberAccess","src":"2286:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2276:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2253:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"nodeType":"IfStatement","src":"2249:77:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1123,"name":"AmountMustEqualValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2304:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2304:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"RevertStatement","src":"2297:29:7"}},{"assignments":[1128],"declarations":[{"constant":false,"id":1128,"mutability":"mutable","name":"user","nameLocation":"2341:4:7","nodeType":"VariableDeclaration","scope":1182,"src":"2333:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1131,"initialValue":{"expression":{"id":1129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2348:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2352:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2348:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2333:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2369:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2386:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2378:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1133,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:7","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2369:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1155,"nodeType":"Block","src":"2440:69:7","statements":[{"expression":{"arguments":[{"id":1150,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2479:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1151,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2485:8:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1152,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2495:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1147,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2455:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1146,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2448:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2462:16:7","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":338,"src":"2448:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2448:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"2448:54:7"}]},"id":1156,"nodeType":"IfStatement","src":"2365:144:7","trueBody":{"id":1145,"nodeType":"Block","src":"2390:44:7","statements":[{"expression":{"arguments":[{"expression":{"id":1141,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2417:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2421:5:7","memberName":"value","nodeType":"MemberAccess","src":"2417:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1138,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2398:8:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2407:9:7","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":608,"src":"2398:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1144,"nodeType":"ExpressionStatement","src":"2398:29:7"}]}},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"index","nameLocation":"2523:5:7","nodeType":"VariableDeclaration","scope":1182,"src":"2515:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"id":1160,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1159,"name":"bridgeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2531:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2531:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:33:7"},{"expression":{"arguments":[{"id":1164,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2575:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"2581:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1163,"name":"storeBridgeMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"2555:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1167,"nodeType":"ExpressionStatement","src":"2555:35:7"},{"expression":{"arguments":[{"id":1169,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2616:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1168,"name":"increaseBridgeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2596:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1171,"nodeType":"ExpressionStatement","src":"2596:25:7"},{"eventCall":{"arguments":[{"expression":{"id":1173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2641:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2645:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2641:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"2653:8:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1176,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"2663:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1177,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2670:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1178,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"2678:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1179,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"2688:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"Bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"2633:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,uint256)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"EmitStatement","src":"2628:66:7"}]},"functionSelector":"78499054","id":1183,"implemented":true,"kind":"function","modifiers":[{"id":1090,"kind":"modifierInvocation","modifierName":{"id":1089,"name":"onlyEnabled","nameLocations":["2109:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1026,"src":"2109:11:7"},"nodeType":"ModifierInvocation","src":"2109:11:7"},{"id":1092,"kind":"modifierInvocation","modifierName":{"id":1091,"name":"nonReentrant","nameLocations":["2121:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"2121:12:7"},"nodeType":"ModifierInvocation","src":"2121:12:7"}],"name":"bridge","nameLocation":"2005:6:7","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"amount","nameLocation":"2020:6:7","nodeType":"VariableDeclaration","scope":1183,"src":"2012:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"token","nameLocation":"2036:5:7","nodeType":"VariableDeclaration","scope":1183,"src":"2028:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"2028:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"provider","nameLocation":"2059:8:7","nodeType":"VariableDeclaration","scope":1183,"src":"2043:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2043:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"metadata","nameLocation":"2082:8:7","nodeType":"VariableDeclaration","scope":1183,"src":"2069:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"2069:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2011:80:7"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"2134:0:7"},"scope":1556,"src":"1996:703:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1220,"nodeType":"Block","src":"2843:139:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2853:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2862:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"2862:7:7","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2853:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1204,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2876:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2886:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2890:5:7","memberName":"value","nodeType":"MemberAccess","src":"2886:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2876:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2853:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"2849:77:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1209,"name":"AmountMustEqualValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2904:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2904:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"2897:29:7"}},{"expression":{"arguments":[{"id":1214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2942:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1215,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2950:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2957:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1217,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2968:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1213,"name":"_release","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"2933:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_payable_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,address payable,bytes memory)"}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1219,"nodeType":"ExpressionStatement","src":"2933:44:7"}]},"functionSelector":"c4b7f65b","id":1221,"implemented":true,"kind":"function","modifiers":[{"id":1194,"kind":"modifierInvocation","modifierName":{"id":1193,"name":"onlyEnabled","nameLocations":["2818:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1026,"src":"2818:11:7"},"nodeType":"ModifierInvocation","src":"2818:11:7"},{"id":1196,"kind":"modifierInvocation","modifierName":{"id":1195,"name":"nonReentrant","nameLocations":["2830:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"2830:12:7"},"nodeType":"ModifierInvocation","src":"2830:12:7"}],"name":"release","nameLocation":"2712:7:7","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"amount","nameLocation":"2728:6:7","nodeType":"VariableDeclaration","scope":1221,"src":"2720:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"token","nameLocation":"2744:5:7","nodeType":"VariableDeclaration","scope":1221,"src":"2736:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"recipient","nameLocation":"2767:9:7","nodeType":"VariableDeclaration","scope":1221,"src":"2751:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"2751:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"metadata","nameLocation":"2791:8:7","nodeType":"VariableDeclaration","scope":1221,"src":"2778:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"2778:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2719:81:7"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"2843:0:7"},"scope":1556,"src":"2703:279:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1329,"nodeType":"Block","src":"3184:489:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1240,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3194:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:7","memberName":"length","nodeType":"MemberAccess","src":"3194:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1242,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3212:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3219:6:7","memberName":"length","nodeType":"MemberAccess","src":"3212:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3194:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1245,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3229:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3237:6:7","memberName":"length","nodeType":"MemberAccess","src":"3229:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1247,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3247:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3258:6:7","memberName":"length","nodeType":"MemberAccess","src":"3247:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3229:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3194:70:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1251,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3268:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3276:6:7","memberName":"length","nodeType":"MemberAccess","src":"3268:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1253,"name":"metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3286:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3296:6:7","memberName":"length","nodeType":"MemberAccess","src":"3286:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3268:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3194:108:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1260,"nodeType":"IfStatement","src":"3190:134:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1257,"name":"InvalidArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3311:11:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"RevertStatement","src":"3304:20:7"}},{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"tAmount","nameLocation":"3339:7:7","nodeType":"VariableDeclaration","scope":1329,"src":"3331:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1263,"nodeType":"VariableDeclarationStatement","src":"3331:15:7"},{"body":{"id":1291,"nodeType":"Block","src":"3398:83:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1275,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3410:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1277,"indexExpression":{"id":1276,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3417:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3410:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3431:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3423:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:7","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3423:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3410:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"3406:69:7","trueBody":{"id":1289,"nodeType":"Block","src":"3435:40:7","statements":[{"expression":{"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1283,"name":"tAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"3445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":1284,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3456:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1286,"indexExpression":{"id":1285,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3464:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3445:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1288,"nodeType":"ExpressionStatement","src":"3445:21:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1268,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3373:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1269,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3377:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:6:7","memberName":"length","nodeType":"MemberAccess","src":"3377:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3373:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1292,"initializationExpression":{"assignments":[1265],"declarations":[{"constant":false,"id":1265,"mutability":"mutable","name":"i","nameLocation":"3366:1:7","nodeType":"VariableDeclaration","scope":1292,"src":"3358:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3358:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1267,"initialValue":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3370:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3358:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3393:3:7","subExpression":{"id":1272,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3393:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ExpressionStatement","src":"3393:3:7"},"nodeType":"ForStatement","src":"3353:128:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1293,"name":"tAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"3491:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1294,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3502:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:5:7","memberName":"value","nodeType":"MemberAccess","src":"3502:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3491:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1300,"nodeType":"IfStatement","src":"3487:55:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1297,"name":"AmountMustEqualValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"3520:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1299,"nodeType":"RevertStatement","src":"3513:29:7"}},{"body":{"id":1327,"nodeType":"Block","src":"3594:75:7","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1313,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3611:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1315,"indexExpression":{"id":1314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3619:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3611:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1316,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3623:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1318,"indexExpression":{"id":1317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3630:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3623:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":1319,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3634:10:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"id":1321,"indexExpression":{"id":1320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3645:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:13:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"baseExpression":{"id":1322,"name":"metadatas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3649:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1324,"indexExpression":{"id":1323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3659:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3649:12:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1312,"name":"_release","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"3602:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_payable_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,address payable,bytes memory)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3602:60:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"ExpressionStatement","src":"3602:60:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3569:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1306,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"3573:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3581:6:7","memberName":"length","nodeType":"MemberAccess","src":"3573:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3569:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"initializationExpression":{"assignments":[1302],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"i","nameLocation":"3562:1:7","nodeType":"VariableDeclaration","scope":1328,"src":"3554:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3554:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1304,"initialValue":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3554:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3589:3:7","subExpression":{"id":1309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3589:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1311,"nodeType":"ExpressionStatement","src":"3589:3:7"},"nodeType":"ForStatement","src":"3549:120:7"}]},"functionSelector":"14ed8da7","id":1330,"implemented":true,"kind":"function","modifiers":[{"id":1236,"kind":"modifierInvocation","modifierName":{"id":1235,"name":"onlyEnabled","nameLocations":["3159:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1026,"src":"3159:11:7"},"nodeType":"ModifierInvocation","src":"3159:11:7"},{"id":1238,"kind":"modifierInvocation","modifierName":{"id":1237,"name":"nonReentrant","nameLocations":["3171:12:7"],"nodeType":"IdentifierPath","referencedDeclaration":867,"src":"3171:12:7"},"nodeType":"ModifierInvocation","src":"3171:12:7"}],"name":"multiRelease","nameLocation":"2995:12:7","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"amounts","nameLocation":"3030:7:7","nodeType":"VariableDeclaration","scope":1330,"src":"3013:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1223,"nodeType":"ArrayTypeName","src":"3013:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"tokens","nameLocation":"3060:6:7","nodeType":"VariableDeclaration","scope":1330,"src":"3043:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"3043:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1226,"nodeType":"ArrayTypeName","src":"3043:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"recipients","nameLocation":"3097:10:7","nodeType":"VariableDeclaration","scope":1330,"src":"3072:35:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[]"},"typeName":{"baseType":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"3072:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1229,"nodeType":"ArrayTypeName","src":"3072:17:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"metadatas","nameLocation":"3128:9:7","nodeType":"VariableDeclaration","scope":1330,"src":"3113:24:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"3113:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1232,"nodeType":"ArrayTypeName","src":"3113:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3007:134:7"},"returnParameters":{"id":1239,"nodeType":"ParameterList","parameters":[],"src":"3184:0:7"},"scope":1556,"src":"2986:687:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1412,"nodeType":"Block","src":"3785:513:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1341,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3795:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3808:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"3808:7:7","typeDescriptions":{}}},"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3808:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3795:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"nodeType":"IfStatement","src":"3791:61:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1347,"name":"InvalidRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"3827:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"RevertStatement","src":"3820:32:7"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3862:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3872:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3862:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"3858:45:7","trueBody":{"errorCall":{"arguments":[{"id":1355,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3896:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1354,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3882:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3882:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1357,"nodeType":"RevertStatement","src":"3875:28:7"}},{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"provider","nameLocation":"3918:8:7","nodeType":"VariableDeclaration","scope":1412,"src":"3910:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"3910:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1363,"initialValue":{"expression":{"id":1361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3929:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3933:6:7","memberName":"sender","nodeType":"MemberAccess","src":"3929:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3910:29:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3950:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3967:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3959:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:7","typeDescriptions":{}}},"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3959:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3950:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1386,"nodeType":"Block","src":"4019:74:7","statements":[{"expression":{"arguments":[{"id":1381,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4058:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1382,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"4068:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1383,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4079:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1378,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4034:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1377,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"4027:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4041:16:7","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":338,"src":"4027:30:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"4027:59:7"}]},"id":1387,"nodeType":"IfStatement","src":"3946:147:7","trueBody":{"id":1376,"nodeType":"Block","src":"3971:42:7","statements":[{"expression":{"arguments":[{"id":1373,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3999:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1370,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3979:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:9:7","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":608,"src":"3979:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3979:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1375,"nodeType":"ExpressionStatement","src":"3979:27:7"}]}},{"assignments":[1389],"declarations":[{"constant":false,"id":1389,"mutability":"mutable","name":"index","nameLocation":"4107:5:7","nodeType":"VariableDeclaration","scope":1412,"src":"4099:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1393,"initialValue":{"arguments":[{"id":1391,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4128:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1390,"name":"releaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4115:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4099:38:7"},{"expression":{"arguments":[{"id":1395,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4165:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4175:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1394,"name":"storeReleaseMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"4144:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"4144:40:7"},{"expression":{"arguments":[{"id":1400,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4211:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1399,"name":"increaseReleaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4190:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4190:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1402,"nodeType":"ExpressionStatement","src":"4190:30:7"},{"eventCall":{"arguments":[{"id":1404,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"4241:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1405,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4252:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4262:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4269:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1408,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4277:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1409,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4287:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1403,"name":"Released","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4232:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,uint256)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4232:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1411,"nodeType":"EmitStatement","src":"4227:66:7"}]},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"_release","nameLocation":"3686:8:7","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"amount","nameLocation":"3703:6:7","nodeType":"VariableDeclaration","scope":1413,"src":"3695:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"3695:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"token","nameLocation":"3719:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"3711:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"3711:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"recipient","nameLocation":"3742:9:7","nodeType":"VariableDeclaration","scope":1413,"src":"3726:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"3726:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"metadata","nameLocation":"3766:8:7","nodeType":"VariableDeclaration","scope":1413,"src":"3753:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"3753:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3694:81:7"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"3785:0:7"},"scope":1556,"src":"3677:621:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"4377:58:7","statements":[{"expression":{"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1420,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4383:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4387:7:7","memberName":"bridges","nodeType":"MemberAccess","referencedDeclaration":992,"src":"4383:11:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes storage ref))"}},"id":1424,"indexExpression":{"id":1423,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4395:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4383:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":1428,"indexExpression":{"arguments":[{"id":1426,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4413:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"bridgeIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"4401:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4383:36:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1429,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"4422:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4383:47:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1431,"nodeType":"ExpressionStatement","src":"4383:47:7"}]},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"storeBridgeMetadata","nameLocation":"4311:19:7","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"user","nameLocation":"4339:4:7","nodeType":"VariableDeclaration","scope":1433,"src":"4331:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"4331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"metadata","nameLocation":"4358:8:7","nodeType":"VariableDeclaration","scope":1433,"src":"4345:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1416,"name":"bytes","nodeType":"ElementaryTypeName","src":"4345:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4330:37:7"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"4377:0:7"},"scope":1556,"src":"4302:133:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1452,"nodeType":"Block","src":"4519:68:7","statements":[{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1440,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4525:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4525:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4529:8:7","memberName":"releases","nodeType":"MemberAccess","referencedDeclaration":998,"src":"4525:12:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bytes_storage_$_$","typeString":"mapping(address => mapping(uint256 => bytes storage ref))"}},"id":1444,"indexExpression":{"id":1443,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4538:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4525:22:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes_storage_$","typeString":"mapping(uint256 => bytes storage ref)"}},"id":1448,"indexExpression":{"arguments":[{"id":1446,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4561:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1445,"name":"releaseIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4548:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4548:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4525:46:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1449,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4574:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4525:57:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1451,"nodeType":"ExpressionStatement","src":"4525:57:7"}]},"id":1453,"implemented":true,"kind":"function","modifiers":[],"name":"storeReleaseMetadata","nameLocation":"4448:20:7","nodeType":"FunctionDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"provider","nameLocation":"4477:8:7","nodeType":"VariableDeclaration","scope":1453,"src":"4469:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"4469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"metadata","nameLocation":"4500:8:7","nodeType":"VariableDeclaration","scope":1453,"src":"4487:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4468:41:7"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[],"src":"4519:0:7"},"scope":1556,"src":"4439:148:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"4643:38:7","statements":[{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1458,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4649:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4649:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4653:12:7","memberName":"bridgeIndexs","nodeType":"MemberAccess","referencedDeclaration":982,"src":"4649:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1462,"indexExpression":{"id":1461,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"4666:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4649:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4675:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4649:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1465,"nodeType":"ExpressionStatement","src":"4649:27:7"}]},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"increaseBridgeIndex","nameLocation":"4600:19:7","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"user","nameLocation":"4628:4:7","nodeType":"VariableDeclaration","scope":1467,"src":"4620:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"4620:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4619:14:7"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"4643:0:7"},"scope":1556,"src":"4591:90:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"4742:43:7","statements":[{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1472,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4748:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4748:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4752:13:7","memberName":"releaseIndexs","nodeType":"MemberAccess","referencedDeclaration":986,"src":"4748:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1476,"indexExpression":{"id":1475,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4766:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4748:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4779:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4748:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"4748:32:7"}]},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"increaseReleaseIndex","nameLocation":"4694:20:7","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"provider","nameLocation":"4723:8:7","nodeType":"VariableDeclaration","scope":1481,"src":"4715:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"4715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4714:18:7"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[],"src":"4742:0:7"},"scope":1556,"src":"4685:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1494,"nodeType":"Block","src":"4859:45:7","statements":[{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1488,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4872:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4876:13:7","memberName":"releaseIndexs","nodeType":"MemberAccess","referencedDeclaration":986,"src":"4872:17:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1492,"indexExpression":{"id":1491,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1483,"src":"4890:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4872:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1487,"id":1493,"nodeType":"Return","src":"4865:34:7"}]},"functionSelector":"d5016af7","id":1495,"implemented":true,"kind":"function","modifiers":[],"name":"releaseIndex","nameLocation":"4798:12:7","nodeType":"FunctionDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"provider","nameLocation":"4819:8:7","nodeType":"VariableDeclaration","scope":1495,"src":"4811:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"4811:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4810:18:7"},"returnParameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1486,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1495,"src":"4850:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4850:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4849:9:7"},"scope":1556,"src":"4789:115:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1508,"nodeType":"Block","src":"4973:40:7","statements":[{"expression":{"baseExpression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1502,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"4986:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4990:12:7","memberName":"bridgeIndexs","nodeType":"MemberAccess","referencedDeclaration":982,"src":"4986:16:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1506,"indexExpression":{"id":1505,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"5003:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4986:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1501,"id":1507,"nodeType":"Return","src":"4979:29:7"}]},"functionSelector":"fba07f5f","id":1509,"implemented":true,"kind":"function","modifiers":[],"name":"bridgeIndex","nameLocation":"4917:11:7","nodeType":"FunctionDefinition","parameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"user","nameLocation":"4937:4:7","nodeType":"VariableDeclaration","scope":1509,"src":"4929:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"4929:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4928:14:7"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1509,"src":"4964:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4963:9:7"},"scope":1556,"src":"4908:105:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1518,"nodeType":"Block","src":"5065:31:7","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1514,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"5078:1:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_BridgeStorage_$999_storage_ptr_$","typeString":"function () pure returns (struct Bridge.BridgeStorage storage pointer)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5078:3:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BridgeStorage_$999_storage_ptr","typeString":"struct Bridge.BridgeStorage storage pointer"}},"id":1516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5082:9:7","memberName":"isEnabled","nodeType":"MemberAccess","referencedDeclaration":976,"src":"5078:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1513,"id":1517,"nodeType":"Return","src":"5071:20:7"}]},"functionSelector":"6aa633b6","id":1519,"implemented":true,"kind":"function","modifiers":[],"name":"isEnabled","nameLocation":"5026:9:7","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"5035:2:7"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"5059:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1511,"name":"bool","nodeType":"ElementaryTypeName","src":"5059:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5058:6:7"},"scope":1556,"src":"5017:79:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1538,"nodeType":"Block","src":"5261:54:7","statements":[{"expression":{"arguments":[{"id":1534,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"5294:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1535,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"5303:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1531,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"5274:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1530,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5267:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$225_$","typeString":"type(contract IERC20)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5267:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$225","typeString":"contract IERC20"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5281:12:7","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":311,"src":"5267:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$","typeString":"function (contract IERC20,address,uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5267:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"5267:43:7"}]},"functionSelector":"01e33667","id":1539,"implemented":true,"kind":"function","modifiers":[{"id":1528,"kind":"modifierInvocation","modifierName":{"id":1527,"name":"onlyOwner","nameLocations":["5251:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5251:9:7"},"nodeType":"ModifierInvocation","src":"5251:9:7"}],"name":"withdrawToken","nameLocation":"5180:13:7","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"token","nameLocation":"5202:5:7","nodeType":"VariableDeclaration","scope":1539,"src":"5194:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"account","nameLocation":"5217:7:7","nodeType":"VariableDeclaration","scope":1539,"src":"5209:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"5209:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"amount","nameLocation":"5234:6:7","nodeType":"VariableDeclaration","scope":1539,"src":"5226:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5226:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5193:48:7"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"5261:0:7"},"scope":1556,"src":"5171:144:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1554,"nodeType":"Block","src":"5472:36:7","statements":[{"expression":{"arguments":[{"id":1551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"5496:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1548,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5478:7:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5486:9:7","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":608,"src":"5478:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$","typeString":"function (address payable,uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"5478:25:7"}]},"functionSelector":"522f6815","id":1555,"implemented":true,"kind":"function","modifiers":[{"id":1546,"kind":"modifierInvocation","modifierName":{"id":1545,"name":"onlyOwner","nameLocations":["5462:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5462:9:7"},"nodeType":"ModifierInvocation","src":"5462:9:7"}],"name":"withdrawEther","nameLocation":"5398:13:7","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"account","nameLocation":"5428:7:7","nodeType":"VariableDeclaration","scope":1555,"src":"5412:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"5412:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"amount","nameLocation":"5445:6:7","nodeType":"VariableDeclaration","scope":1555,"src":"5437:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:7"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"5472:0:7"},"scope":1556,"src":"5389:119:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1557,"src":"446:5101:7","usedErrors":[13,18,278,559,564,567,848,924,928,930,932,934,936,938,940,942],"usedEvents":[24,956,970,974]}],"src":"39:5509:7"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SafeERC20.sol:SafeERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000046aacc96dcfb26634b1c903c3aa236b29455c58c07bb881949b19e8e505c409c"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 3:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\nobject \"SafeERC20_551\" {\n    code {\n        {\n            /// @src 3:751:5769  \"library SafeERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeERC20_551_deployed\")\n            codecopy(_1, dataoffset(\"SafeERC20_551_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"\n    object \"SafeERC20_551_deployed\" {\n        code {\n            {\n                /// @src 3:751:5769  \"library SafeERC20 {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e68f1a6ddcaeb9ef89eb60390812039a4933d9ac09ac81e002605eec5ceb204d64736f6c63430008180033\"\n    }\n}\n","hash":"01000007d6c52c8ede17c5020faa968b87c82b129da942064fad9ca93106ac7c","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a2559529ef2852277c3359d3dc28c644427eaa8f18a198aa3fbc105f0238e033"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 4:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_804\" {\n    code {\n        {\n            /// @src 4:195:6261  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_804_deployed\")\n            codecopy(_1, dataoffset(\"Address_804_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_804_deployed\" {\n        code {\n            {\n                /// @src 4:195:6261  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220fd25622612b6bea7c6e35b6e94e594f89516b4f7cd31f5ca22951c3ce99d7ceb64736f6c63430008180033\"\n    }\n}\n","hash":"0100000712e01ad1f7466b93e9df493fd3a3af77e704645469e8cc7b597648be","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"contracts/Bridge.sol":{"Bridge":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"AmountMustEqualValue","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"Initialized","type":"error"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InvalidAmount","type":"error"},{"inputs":[],"name":"InvalidArgs","type":"error"},{"inputs":[],"name":"InvalidProvider","type":"error"},{"inputs":[],"name":"InvalidRecipientAddress","type":"error"},{"inputs":[],"name":"InvalidValue","type":"error"},{"inputs":[],"name":"OnlyEnabled","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ParamsError","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"metadata","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"Bridged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"isEnabled","type":"bool"}],"name":"EnableChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"metadata","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"index","type":"uint256"}],"name":"Released","type":"event"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address payable","name":"provider","type":"address"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"bridge","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"bridgeIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_isEnabled","type":"bool"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isEnabled","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"tokens","type":"address[]"},{"internalType":"address payable[]","name":"recipients","type":"address[]"},{"internalType":"bytes[]","name":"metadatas","type":"bytes[]"}],"name":"multiRelease","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"address payable","name":"recipient","type":"address"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"name":"release","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"releaseIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isEnabled","type":"bool"}],"name":"setIsEnabled","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawEther","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountMustEqualValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProvider\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyEnabled\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParamsError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Bridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"EnableChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"bridge\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"bridgeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address payable[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"metadatas\",\"type\":\"bytes[]\"}],\"name\":\"multiRelease\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"releaseIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"setIsEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bridge.sol\":\"Bridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"contracts/Bridge.sol\":{\"keccak256\":\"0xc41619458903b0afae2be3151aa4b627329a89599f65438ad315e0de1363dbe9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ee472559d0e20622c4d44bfee5099570ef7f16e716fb5111462aa188c668de3d\",\"dweb:/ipfs/QmcS48dcfRzimc2eysrZ64SPtuJSqzWEmNVKz9P1vZNHpq\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.0"},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Bridge.sol:Bridge\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tptr.add\tr1, r0, r15\n\tadd\tr15, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r4\n\tptr.add\tr15, r4, stack[@ptr_return_data]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r1\n\tjump.lt\t@.BB0_2\n\tld\tr15, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_6[0], r1, r2\n\tjump.le\t@.BB0_9\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.le\t@.BB0_17\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_23\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.eq\t@.BB0_253\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_262\n\tadd\t@CPI0_27[0], r0, r2\n\tsload\tr2, r3\n\tand!\t65280, r3, r4\n\tjump.ne\t@.BB0_264\n\tand\t@CPI0_30[0], r3, r3\n\tor\tr1, r3, r1\n\tor\t256, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_5\n.BB0_4:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_5:\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tsstore\tr1, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add\tr15, r0, stack-[16]\n\tnear_call\tr0, @fun_checkOwner, @DEFAULT_UNWIND\n\tptr.add\tstack-[16], r0, r1\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tnear_call\tr0, @fun_sendValue, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tsub.s!\t@CPI0_13[0], r1, r2\n\tjump.eq\t@.BB0_227\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.eq\t@.BB0_230\n\tsub.s!\t@CPI0_15[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t128, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r15, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r15, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_31[0], r6, r5\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r5\n\tadd\t@CPI0_32[0], r0, r7\n\tsub!\tr5, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_32[0], r5, r5\n\tsub!\tr5, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_32[0], r5, r5\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr15, r7, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_31[0], r5, r8\n\tjump.gt\t@.BB0_36\n\tadd\t191, r5, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_31[0], r8, r9\n\tjump.gt\t@.BB0_36\n\tst.1\t64, r8\n\tst.1\t128, r5\n\tadd\tr6, r5, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr15, r4, r4\n\tand\t31, r5, r6\n\tshr.s!\t5, r5, r7\n\tjump.eq\t@.BB0_280\n\tadd\tr0, r0, r8\n.BB0_246:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_246\n.BB0_280:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_248\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_248:\n\tadd\t160, r5, r4\n\tst.1\tr4, r0\n\tadd\t@CPI0_27[0], r0, r4\n\tsload\tr4, r4\n\tand!\t255, r4, r4\n\tjump.eq\t@.BB0_83\n\tadd\t1, r0, r4\n\tadd\tr4, r0, stack-[17]\n\tsload\tr4, r4\n\tsub.s!\t2, r4, r4\n\tjump.eq\t@.BB0_86\n\tadd\t2, r0, r4\n\tadd\tstack-[17], r0, r5\n\tsstore\tr5, r4\n\tsub!\tr2, r0, r4\n\tjump.ne\t@.BB0_252\n\tcontext.get_context_u128\tr4\n\tsub!\tr1, r4, r4\n\tjump.ne\t@.BB0_102\n.BB0_252:\n\tadd\t128, r0, r4\n\tnear_call\tr0, @fun_release, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r1\n.BB0_105:\n\tsstore\tr1, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_168\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.eq\t@.BB0_170\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t128, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r15, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r15, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r1\n\tadd\t@CPI0_32[0], r0, r3\n\tsub!\tr1, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr3, r0, r5\n\tand\t@CPI0_32[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tadd.ne\tr5, r0, r3\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr15, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_31[0], r1, r5\n\tjump.gt\t@.BB0_36\n\tadd\t191, r1, r5\n\tsub.s\t32, r0, r7\n\tand\tr5, r7, r5\n\tsub.s!\t@CPI0_31[0], r5, r6\n\tjump.gt\t@.BB0_36\n\tadd\tr7, r0, stack-[14]\n\tst.1\t64, r5\n\tst.1\t128, r1\n\tadd\tr2, r1, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t32, r3, r2\n\tptr.add\tr15, r2, r2\n\tand\t31, r1, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_279\n\tadd\tr0, r0, r5\n.BB0_186:\n\tshl.s\t5, r5, r6\n\tptr.add\tr2, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_186\n.BB0_279:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_188\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_188:\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_27[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_189\n.BB0_83:\n\tld.1\t64, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_23:\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.eq\t@.BB0_266\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tjump\t@.BB0_257\n.BB0_253:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address_12440, @DEFAULT_UNWIND\n.BB0_257:\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_266:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_270\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_4\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tjump\t@.BB0_174\n.BB0_227:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tjump\t@.BB0_229\n.BB0_230:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_234\n\tadd\t@CPI0_27[0], r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tjump\t@.BB0_174\n.BB0_25:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r15, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tcontext.caller\tr3\n\tsub!\tr4, r3, r4\n\tjump.ne\t@.BB0_30\n\tadd\t@CPI0_61[0], r0, r3\n\tst.1\t160, r3\n\tst.1\t164, r2\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r2\n\tst.1\t196, r2\n\tadd\t68, r0, r2\n\tst.1\t128, r2\n\tadd\t256, r0, r2\n\tst.1\t64, r2\n\tadd\t128, r0, r2\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_168:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_27[0], r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_229:\n\tst.1\t128, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub.s\t4, r4, r1\n\tsub.s!\t128, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r15, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r1, r2\n\tadd\t@CPI0_32[0], r0, r3\n\tsub!\tr2, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr3, r0, r5\n\tand\t@CPI0_32[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tadd.ne\tr5, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t4, r1, r2\n\tptr.add\tr15, r2, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_45[0], r3, r2\n\tjump.ge\t@.BB0_36\n\tshl.s\t5, r3, r2\n\tadd\t191, r2, r5\n\tsub.s\t32, r0, stack-[17]\n\tand\tstack-[17], r5, r5\n\tsub.s!\t@CPI0_31[0], r5, r6\n\tjump.le\t@.BB0_39\n.BB0_36:\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_37:\n\tst.1\t4, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_170:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_172\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_174:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_270:\n.BB0_172:\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_262:\n.BB0_234:\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_264:\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_30:\n\tadd\t@CPI0_24[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r3\n\tadd\t@CPI0_25[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_39:\n\tst.1\t64, r5\n\tst.1\t128, r3\n\tadd\t36, r1, r1\n\tadd\tr2, r1, r2\n\tsub!\tr2, r4, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_43\n\tadd\t160, r0, r3\n.BB0_42:\n\tptr.add\tr15, r1, r5\n\tld\tr5, r5\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tptr.add.s\t36, r15, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r1\n\tadd\t@CPI0_32[0], r0, r3\n\tsub!\tr1, r4, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr3, r0, r5\n\tand\t@CPI0_32[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tadd.ne\tr5, r0, r3\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r1\n\tptr.add\tr15, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_31[0], r3, r1\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r3, r5\n\tadd\t63, r5, r1\n\tand\tstack-[17], r1, r1\n\tld.1\t64, r6\n\tadd\tr6, r1, r1\n\tadd\tr6, r0, stack-[16]\n\tsub!\tr1, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_31[0], r1, r7\n\tjump.gt\t@.BB0_36\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tst.1.inc\tr1, r3, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r4, r6\n\tjump.le\t@.BB0_49\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_189:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tsub.s!\t2, r2, r2\n\tjump.ne\t@.BB0_190\n.BB0_86:\n\tld.1\t64, r1\n\tadd\t@CPI0_59[0], r0, r2\n.BB0_84:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_49:\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_53\n\tadd\tstack-[15], r0, r3\n.BB0_51:\n\tptr.add\tr15, r2, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_3[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr3, r6, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_51\n.BB0_53:\n\tptr.add.s\t68, r15, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_32[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_32[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_32[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr15, r3, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_31[0], r3, r5\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r3, r5\n\tadd\t63, r5, r6\n\tand\tstack-[17], r6, r6\n\tld.1\t64, r7\n\tadd\tr7, r6, r6\n\tadd\tr7, r0, stack-[7]\n\tsub!\tr6, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_31[0], r6, r8\n\tjump.gt\t@.BB0_36\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r6\n\tadd\tstack-[7], r0, r6\n\tst.1\tr6, r3\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r4, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_63\n\tadd\tstack-[7], r0, r3\n.BB0_61:\n\tptr.add\tr15, r2, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_3[0], r6, r7\n\tjump.gt\t@.BB0_2\n\tadd\t32, r3, r3\n\tst.1\tr3, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_61\n.BB0_63:\n\tptr.add.s\t100, r15, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_31[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_32[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_32[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_32[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr15, r3, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_31[0], r6, r3\n\tjump.gt\t@.BB0_36\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r3\n\tand\tstack-[17], r3, r3\n\tld.1\t64, r7\n\tadd\tr7, r3, r3\n\tadd\tr7, r0, stack-[4]\n\tsub!\tr3, r7, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_31[0], r3, r8\n\tjump.gt\t@.BB0_36\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r3\n\tadd\tstack-[4], r0, r3\n\tst.1\tr3, r6\n\tadd\t36, r2, r3\n\tadd\tr5, r3, r5\n\tsub!\tr5, r4, r7\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r6\n\tjump.ne\t@.BB0_70\n.BB0_72:\n\tadd\t@CPI0_27[0], r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tjump.eq\t@.BB0_83\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r2\n\tsub.s!\t2, r2, r2\n\tjump.eq\t@.BB0_86\n\tadd\t2, r0, r2\n\tadd\tstack-[1], r0, r1\n\tsstore\tr1, r2\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r3\n\tld.1\t128, r2\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_90\n\tadd\tstack-[7], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_90\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_90\n\tsub!\tr2, r0, r3\n\tjump.ne\t@.BB0_92\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_102\n\tjump\t@.BB0_104\n.BB0_190:\n\tadd\t2, r0, r2\n\tsstore\tr1, r2\n\tsub!\tstack-[15], r0, r1\n\tjump.ne\t@.BB0_192\n\tld.1\t64, r1\n\tadd\t@CPI0_43[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_192:\n\tsub!\tstack-[17], r0, r1\n\tjump.ne\t@.BB0_193\n.BB0_112:\n\tld.1\t64, r1\n\tadd\t@CPI0_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_113:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_193:\n\tsub!\tstack-[16], r0, r1\n\tjump.ne\t@.BB0_200\n\tcontext.get_context_u128\tr2\n\tsub!\tstack-[17], r2, r1\n\tjump.ne\t@.BB0_102\n\tadd\tstack-[15], r0, r1\n\tnear_call\tr0, @fun_sendValue, @DEFAULT_UNWIND\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[12]\n\tand\t@CPI0_3[0], r1, stack-[13]\n\tjump\t@.BB0_195\n.BB0_200:\n\tld.1\t64, r2\n\tadd\t32, r2, r1\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r2, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\tstack-[15], r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r0, r1\n\tst.1\tr2, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[12]\n\tand\t@CPI0_3[0], r1, r3\n\tadd\t36, r2, r1\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.gt\t@.BB0_36\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n.BB0_195:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tld.1\t128, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_31[0], r1, r1\n\tjump.gt\t@.BB0_36\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_204\n.BB0_141:\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_37\n.BB0_204:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_208\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[8], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_208\n.BB0_209:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_209\n.BB0_208:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_220\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tand!\tstack-[14], r3, r2\n\tadd\t160, r0, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_217\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_215:\n\tadd\tr4, r0, r5\n\tadd\t128, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_215\n\tadd\t160, r5, r3\n.BB0_217:\n\tsub.s!\tstack-[9], r2, r2\n\tjump.ge\t@.BB0_219\n\tadd\tstack-[9], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_219:\n\tadd\tstack-[9], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_210\n.BB0_70:\n\tadd\t@CPI0_32[0], r0, r6\n\tadd\tstack-[4], r0, r7\n\tjump\t@.BB0_71\n.BB0_82:\n\tadd\t32, r7, r7\n\tadd\tr10, r8, r8\n\tst.1\tr8, r0\n\tst.1\tr7, r9\n\tadd\t32, r3, r3\n\tsub!\tr3, r5, r8\n\tptr.add\tr1, r0, r15\n\tjump.ge\t@.BB0_72\n.BB0_71:\n\tptr.add\tr15, r3, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_31[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r2, r11\n\tadd\t67, r11, r8\n\tsub!\tr8, r4, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr6, r0, r9\n\tand\t@CPI0_32[0], r8, r8\n\tsub!\tr8, r0, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr6, r0, r10\n\tsub.s!\t@CPI0_32[0], r8, r8\n\tadd.ne\tr9, r0, r10\n\tsub!\tr10, r0, r8\n\tjump.ne\t@.BB0_2\n\tadd\t36, r11, r12\n\tptr.add\tr15, r12, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_31[0], r8, r9\n\tjump.gt\t@.BB0_36\n\tadd\t63, r8, r9\n\tand\tstack-[17], r9, r10\n\tld.1\t64, r9\n\tadd\tr9, r10, r10\n\tsub!\tr10, r9, r13\n\tadd\t0, r0, r13\n\tadd.lt\t1, r0, r13\n\tsub.s!\t@CPI0_31[0], r10, r14\n\tjump.gt\t@.BB0_36\n\tand!\t1, r13, r13\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r10\n\tst.1.inc\tr9, r8, r10\n\tadd\tr11, r8, r11\n\tadd\t68, r11, r11\n\tsub!\tr11, r4, r11\n\tjump.gt\t@.BB0_2\n\tadd\t32, r12, r11\n\tptr.add\tr15, r0, r1\n\tptr.add\tr15, r11, r11\n\tshr.s!\t5, r8, r12\n\tjump.eq\t@.BB0_278\n\tadd\tr0, r0, r13\n.BB0_80:\n\tshl.s\t5, r13, r14\n\tadd\tr10, r14, r15\n\tptr.add\tr11, r14, r14\n\tld\tr14, r14\n\tst.1\tr15, r14\n\tadd\t1, r13, r13\n\tsub!\tr13, r12, r14\n\tjump.lt\t@.BB0_80\n.BB0_278:\n\tand!\t31, r8, r13\n\tjump.eq\t@.BB0_82\n\tshl.s\t5, r12, r12\n\tptr.add\tr11, r12, r11\n\tadd\tr10, r12, r12\n\tshl.s\t3, r13, r13\n\tld.1\tr12, r14\n\tshl\tr14, r13, r14\n\tshr\tr14, r13, r14\n\tld\tr11, r11\n\tsub\t256, r13, r13\n\tshr\tr11, r13, r11\n\tshl\tr11, r13, r11\n\tor\tr11, r14, r11\n\tst.1\tr12, r11\n\tjump\t@.BB0_82\n.BB0_220:\n\tsub!\tstack-[9], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_222\n\tld.1\t160, r1\n.BB0_222:\n\tadd\tstack-[9], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_210:\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_223\n.BB0_101:\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_37\n.BB0_90:\n\tld.1\t64, r1\n\tadd\t@CPI0_46[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_223:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r2\n\tadd\t192, r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t192, r1, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tadd\t224, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r4\n.BB0_225:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_225\n.BB0_226:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t160, r1, r3\n\tadd\tstack-[11], r0, r4\n\tst.1\tr3, r4\n\tadd\t255, r2, r2\n\tand\tstack-[14], r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_42[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_104:\n\tadd\t1, r0, r1\n\tjump\t@.BB0_105\n.BB0_92:\n\tadd\tr0, r0, r4\n\tadd\tr0, r0, r3\n\tadd\tstack-[15], r0, r1\n\tjump\t@.BB0_96\n.BB0_100:\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.ge\t@.BB0_93\n.BB0_96:\n\tsub!\tr2, r4, r5\n\tjump.le\t@.BB0_97\n\tshl.s\t5, r4, r5\n\tadd\tr5, r1, r6\n\tld.1\tr6, r6\n\tand!\t@CPI0_3[0], r6, r6\n\tjump.ne\t@.BB0_100\n\tadd\t160, r5, r5\n\tld.1\tr5, r5\n\tadd\tr5, r3, r3\n\tsub!\tr3, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_100\n\tjump\t@.BB0_101\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub!\tr3, r1, r1\n\tjump.ne\t@.BB0_102\n\tadd\tr0, r0, stack-[14]\n.BB0_106:\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\tstack-[14], r1, r1\n\tjump.le\t@.BB0_97\n\tadd\tstack-[14], r0, r3\n\tshl.s\t5, r3, r2\n\tadd\t32, r2, r1\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tstack-[16], r1, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_3[0], r2, stack-[8]\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_97\n\tadd\tstack-[7], r1, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_3[0], r2, stack-[12]\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\tstack-[14], r2, r2\n\tjump.le\t@.BB0_97\n\tsub!\tstack-[12], r0, r2\n\tjump.eq\t@.BB0_110\n\tsub!\tstack-[13], r0, r2\n\tjump.eq\t@.BB0_112\n\tadd\tstack-[4], r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub!\tstack-[8], r0, r1\n\tjump.eq\t@.BB0_122\n\tld.1\t64, r2\n\tadd\t32, r2, r1\n\tadd\t@CPI0_36[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r2, r1\n\tadd\tstack-[13], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\tstack-[12], r0, r3\n\tst.1\tr1, r3\n\tadd\t100, r0, r1\n\tst.1\tr2, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tand\t@CPI0_3[0], r1, r3\n\tadd\t36, r2, r1\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.gt\t@.BB0_36\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tjump\t@.BB0_115\n.BB0_122:\n\tadd\t@CPI0_49[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[15]\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_50[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_123\n\tld\tr1, r1\n\tsub.s!\tstack-[13], r1, r1\n\tjump.lt\t@.BB0_125\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_138\n\tadd\tstack[@returndatasize], r0, r1\n\tadd\tstack-[1], r0, r2\n\tjump\t@.BB0_128\n.BB0_138:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[13], r0, r3\n\tadd\tstack-[12], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_128:\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_31[0], r1, r3\n\tjump.gt\t@.BB0_36\n\tadd\t63, r1, r3\n\tand\tstack-[17], r3, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_31[0], r4, r6\n\tjump.gt\t@.BB0_36\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_36\n\tst.1\t64, r4\n\tst.1.inc\tr3, r1, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB0_277\n\tadd\tr0, r0, r6\n.BB0_134:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_134\n.BB0_277:\n\tand!\t31, r1, r1\n\tjump.eq\t@.BB0_136\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_136:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_139\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tand\t@CPI0_3[0], r1, stack-[11]\n.BB0_115:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[9], r0, r1\n\tld.1.inc\tr1, r1, r2\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_31[0], r1, r1\n\tjump.gt\t@.BB0_36\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_141\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_146\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_146\n.BB0_147:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_147\n.BB0_146:\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_157\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tand!\tstack-[17], r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_154\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_153:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_153\n.BB0_154:\n\tsub.s!\tstack-[15], r3, r3\n\tjump.ge\t@.BB0_156\n\tadd\tstack-[15], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[9], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_156:\n\tadd\tstack-[15], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_148\n.BB0_157:\n\tsub!\tstack-[15], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_159\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n.BB0_159:\n\tadd\tstack-[15], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_148:\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_101\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r2\n\tadd\t192, r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[13], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r7\n\tld.1\tr7, r2\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\t224, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_163\n\tadd\tr0, r0, r4\n.BB0_162:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_162\n.BB0_163:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t160, r1, r3\n\tadd\tstack-[3], r0, r4\n\tst.1\tr3, r4\n\tadd\t255, r2, r2\n\tand\tstack-[17], r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_54[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, stack-[14]\n\tld.1\t128, r1\n\tsub!\tstack-[14], r1, r1\n\tjump.lt\t@.BB0_106\n\tjump\t@.BB0_104\n.BB0_102:\n\tld.1\t64, r1\n\tadd\t@CPI0_58[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_97:\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_37\n.BB0_110:\n\tld.1\t64, r1\n\tadd\t@CPI0_57[0], r0, r2\n\tjump\t@.BB0_84\n.BB0_123:\n\trevert\n.BB0_125:\n\tld.1\t64, r1\n\tadd\t@CPI0_55[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tjump\t@.BB0_113\n.BB0_139:\n\tld.1\t64, r1\n\tadd\t@CPI0_51[0], r0, r2\n\tjump\t@.BB0_84\n.func_end0:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin1:\n\tand\t@CPI1_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nmapping_index_access_mapping_address_uint256_of_address_12440:\n.func_begin2:\n\tand\t@CPI2_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_1\n\tld\tr1, r1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_checkOwner:\n.func_begin3:\n\tsload\tr0, r1\n\tand\t@CPI3_0[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB3_1\n\tret\n.BB3_1:\n\tld.1\t64, r2\n\tadd\t@CPI3_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tsub.s!\t@CPI3_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI3_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_release:\n.func_begin4:\n\tnop\tstack+=[11]\n\tand!\t@CPI4_0[0], r3, r5\n\tjump.eq\t@.BB4_1\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB4_4\n\tand!\t@CPI4_0[0], r2, stack-[8]\n\tadd\tr4, r0, stack-[10]\n\tadd\tr5, r0, stack-[7]\n\tadd\tr1, r0, stack-[6]\n\tjump.eq\t@.BB4_17\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tadd\t@CPI4_1[0], r0, r3\n\tst.1\tr4, r3\n\tadd\t100, r2, r3\n\tst.1\tr3, r1\n\tadd\t68, r2, r1\n\tst.1\tr1, r5\n\tadd\t100, r0, r1\n\tst.1\tr2, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[9]\n\tand\t@CPI4_0[0], r1, r3\n\tadd\t36, r2, r1\n\tadd\tr3, r0, stack-[11]\n\tst.1\tr1, r3\n\tsub.s!\t@CPI4_2[0], r2, r1\n\tjump.ge\t@.BB4_14\n\tadd\t160, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[8], r0, r1\n\tnear_call\tr0, @fun_callOptionalReturn, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r1\n\tjump\t@.BB4_7\n.BB4_17:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_18\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r3\n\tsub!\tr1, r3, r1\n\tadd\tstack-[7], r0, r4\n\tjump.lt\t@.BB4_20\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB4_33\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB4_23\n.BB4_33:\n\tadd\t@CPI4_4[0], r0, r2\n\tsub.s!\t@CPI4_4[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_6[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI4_4[0], r1, stack[@returndatasize]\n\tand\t@CPI4_4[0], r1, r1\n.BB4_23:\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB4_31\n\tsub.s!\t@CPI4_7[0], r1, r3\n\tjump.gt\t@.BB4_14\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI4_7[0], r3, r6\n\tjump.gt\t@.BB4_14\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB4_14\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr4, r1, r4\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB4_61\n\tadd\tr0, r0, r6\n.BB4_29:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB4_29\n.BB4_61:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB4_31\n\tshl.s\t5, r1, r1\n\tptr.add\tr5, r1, r5\n\tadd\tr4, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r4, r3\n\tst.1\tr1, r3\n.BB4_31:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_34\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[9]\n\tand\t@CPI4_0[0], r1, r1\n.BB4_7:\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI4_12[0], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_4[0], r1, r2\n\tadd.ge\t@CPI4_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_4[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_4[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_4[0], r1, r2\n\tadd.ge\t@CPI4_4[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r4\n\tadd\tstack-[10], r0, r1\n\tld.1.inc\tr1, r5, r6\n\tsub.s!\t@CPI4_7[0], r5, r1\n\tjump.gt\t@.BB4_14\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB4_36\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[5]\n\tadd\tr5, r0, stack-[3]\n\tjump.lt\t@.BB4_41\n\tadd\tr3, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tst.1\t0, r4\n\tadd\t@CPI4_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tadd\tstack-[3], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[2], r0, r6\n\tjump.ge\t@.BB4_41\n.BB4_42:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB4_42\n.BB4_41:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB4_52\n\tst.1\t0, r4\n\tadd\t@CPI4_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_13[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tsub.s\t32, r0, r2\n\tadd\tstack-[3], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r6\n\tjump.eq\t@.BB4_49\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB4_48:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB4_48\n.BB4_49:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB4_51\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB4_51:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB4_43\n.BB4_52:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB4_54\n\tld.1\tr6, r1\n.BB4_54:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB4_43:\n\tsstore\tr4, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI4_10[0], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_4[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_11[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_8\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB4_55\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r2\n\tadd\t192, r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[6], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[10], r0, r7\n\tld.1\tr7, r2\n\tadd\t192, r1, r3\n\tst.1\tr3, r2\n\tadd\t224, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB4_59\n\tadd\tr0, r0, r4\n.BB4_58:\n\tadd\tr4, r3, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB4_58\n.BB4_59:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t160, r1, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\tr3, r4\n\tadd\t255, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\t@CPI4_4[0], r0, r3\n\tsub.s!\t@CPI4_4[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_4[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI4_14[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_8\n\tret\n.BB4_8:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_14:\n\tadd\t@CPI4_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tjump\t@.BB4_15\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t@CPI4_19[0], r0, r2\n\tjump\t@.BB4_2\n.BB4_4:\n\tld.1\t64, r1\n\tadd\t@CPI4_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tjump\t@.BB4_5\n.BB4_36:\n\tadd\t@CPI4_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB4_15\n.BB4_55:\n\tadd\t@CPI4_15[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n.BB4_15:\n\tst.1\t4, r1\n\tadd\t@CPI4_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_18:\n\trevert\n.BB4_20:\n\tld.1\t64, r1\n\tadd\t@CPI4_17[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n.BB4_5:\n\tadd\t@CPI4_4[0], r0, r2\n\tsub.s!\t@CPI4_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_34:\n\tld.1\t64, r1\n\tadd\t@CPI4_8[0], r0, r2\n.BB4_2:\n\tst.1\tr1, r2\n\tadd\t@CPI4_4[0], r0, r2\n\tsub.s!\t@CPI4_4[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_sendValue:\n.func_begin5:\n\tnop\tstack+=[3]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI5_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32778, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.lt\t@.BB5_3\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI5_3[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.ne\t@.BB5_5\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB5_7\n.BB5_5:\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB5_17\n\tor\t@CPI5_4[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n\tjump\t@.BB5_18\n.BB5_17:\n\tadd\tr4, r0, r2\n.BB5_18:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI5_1[0], r1, stack[@returndatasize]\n\tand\t@CPI5_1[0], r1, r1\n.BB5_7:\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB5_16\n\tsub.s!\t@CPI5_5[0], r1, r3\n\tjump.ge\t@.BB5_9\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI5_6[0], r3, r6\n\tjump.gt\t@.BB5_9\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB5_9\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr4, r1, r4\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB5_22\n\tadd\tr0, r0, r6\n.BB5_14:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB5_14\n.BB5_22:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB5_16\n\tshl.s\t5, r1, r1\n\tptr.add\tr5, r1, r5\n\tadd\tr4, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r4, r3\n\tst.1\tr1, r3\n.BB5_16:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB5_20\n\tret\n.BB5_9:\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\trevert\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t@CPI5_11[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_20:\n\tld.1\t64, r1\n\tadd\t@CPI5_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI5_1[0], r0, r2\n\tsub.s!\t@CPI5_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_callOptionalReturn:\n.func_begin6:\n\tnop\tstack+=[5]\n\tld.1.inc\tr2, r4, r3\n\tcontext.gas_left\tr2\n\tand\t@CPI6_0[0], r1, r9\n\tsub.s!\t4, r9, r1\n\tjump.ne\t@.BB6_17\n\tadd\t96, r0, r10\n\tadd!\tstack[@returndatasize], r0, r2\n\tjump.eq\t@.BB6_10\n\tsub.s!\t@CPI6_10[0], r2, r1\n\tjump.ge\t@.BB6_3\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tld.1\t64, r10\n\tadd\tr10, r1, r1\n\tsub!\tr1, r10, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI6_3[0], r1, r4\n\tjump.gt\t@.BB6_3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r1\n\tand\t31, r2, r1\n\tst.1.inc\tr10, r2, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB6_41\n\tadd\tr0, r0, r5\n.BB6_8:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB6_8\n.BB6_41:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB6_10\n\tshl.s\t5, r2, r2\n\tptr.add\tr4, r2, r4\n\tadd\tr3, r2, r2\n\tshl.s\t3, r1, r1\n\tld.1\tr2, r3\n\tshl\tr3, r1, r3\n\tshr\tr3, r1, r3\n\tld\tr4, r4\n\tsub\t256, r1, r1\n\tshr\tr4, r1, r4\n\tshl\tr4, r1, r1\n\tor\tr1, r3, r1\n\tst.1\tr2, r1\n.BB6_10:\n\tcontext.sp\tr2\n\tsub.s\t5, r2, r2\n\tshl.s\t5, r2, r2\n\tld.1\tr10, r1\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB6_32\n\tadd\tr10, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tadd\t@CPI6_6[0], r0, r1\n\tst.2\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.2\t4, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_12\n\tcontext.sp\tr2\n\tsub.s\t5, r2, r2\n\tshl.s\t5, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r10\n\tjump.ne\t@.BB6_33\n\tld.1\t64, r1\n\tadd\t@CPI6_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[1], r0, r3\n\tjump\t@.BB6_15\n.BB6_17:\n\tadd\t@CPI6_1[0], r0, r1\n\tsub.s!\t@CPI6_1[0], r4, r5\n\tadd.ge\tr1, r0, r4\n\tshl.s\t96, r4, r4\n\tsub.s!\t@CPI6_1[0], r3, r5\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr4, r3, r3\n\tsub.s!\t@CPI6_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\tr3, r1, r1\n\tadd\tr9, r0, r2\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\tadd\t96, r0, r10\n\tadd\t128, r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI6_1[0], r4, stack[@returndatasize]\n\tand!\t@CPI6_1[0], r4, r5\n\tjump.eq\t@.BB6_24\n\tadd\t63, r5, r3\n\tand\t@CPI6_2[0], r3, r3\n\tld.1\t64, r10\n\tadd\tr10, r3, r3\n\tsub!\tr3, r10, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI6_3[0], r3, r6\n\tjump.gt\t@.BB6_3\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB6_3\n\tst.1\t64, r3\n\tand\t31, r5, r4\n\tst.1.inc\tr10, r5, r3\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB6_40\n\tadd\tr0, r0, r6\n.BB6_22:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB6_22\n.BB6_40:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB6_24\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB6_24:\n\tld.1\tr10, r1\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_29\n\tcontext.sp\tr2\n\tsub.s\t4, r2, r2\n\tshl.s\t5, r2, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB6_26\n.BB6_32:\n\tshr.s\t5, r2, r2\n\tadd\tr10, r0, stack[r2]\n\tjump\t@.BB6_34\n.BB6_26:\n\tadd\tr10, r0, stack-[2]\n\tadd\t@CPI6_6[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r9\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_7[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_12\n\tcontext.sp\tr2\n\tsub.s\t4, r2, r2\n\tshl.s\t5, r2, r2\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r10\n\tjump.eq\t@.BB6_28\n.BB6_33:\n\tld.1\tr10, r1\n\tshr.s\t5, r2, r2\n\tadd\tr10, r0, stack[r2]\n\tsub!\tr1, r0, r2\n\tadd\tstack-[3], r0, r9\n\tjump.eq\t@.BB6_39\n.BB6_34:\n\tadd\t@CPI6_12[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI6_12[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI6_12[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB6_36\n\tadd\t32, r10, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB6_36\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB6_38\n.BB6_39:\n\tret\n.BB6_36:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tadd\t@CPI6_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_9[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_38:\n\tld.1\t64, r1\n\tadd\t@CPI6_13[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r9\n\tjump\t@.BB6_16\n.BB6_29:\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB6_31\n\tld.1\t64, r1\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_12:\n\trevert\n.BB6_31:\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_28:\n\tld.1\t64, r1\n\tadd\t@CPI6_8[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[3], r0, r3\n.BB6_15:\n\tst.1\tr2, r3\n.BB6_16:\n\tadd\t@CPI6_1[0], r0, r2\n\tsub.s!\t@CPI6_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_9[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\n__cxa_throw:\n\trevert\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_2:\nCPI2_2:\nCPI3_2:\nCPI4_4:\nCPI5_1:\nCPI6_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\nCPI4_6:\nCPI5_4:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\nCPI1_0:\nCPI2_0:\nCPI3_0:\nCPI4_0:\nCPI5_3:\nCPI6_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 2376452954\nCPI0_7:\n\t.cell 3573639926\nCPI0_8:\n\t.cell 4076725130\nCPI0_9:\n\t.cell 4076725131\nCPI0_10:\n\t.cell 4221599583\nCPI0_11:\n\t.cell 3573639927\nCPI0_12:\n\t.cell 3577381423\nCPI0_13:\n\t.cell 2376452955\nCPI0_14:\n\t.cell 3069801729\nCPI0_15:\n\t.cell 3300390491\nCPI0_16:\n\t.cell 1789277109\nCPI0_17:\n\t.cell 1789277110\nCPI0_18:\n\t.cell 1901074598\nCPI0_19:\n\t.cell 2018086996\nCPI0_20:\n\t.cell 31667815\nCPI0_21:\n\t.cell 351112615\nCPI0_22:\n\t.cell 1378838549\nCPI0_23:\n\t.cell 2535301200456458802993406410752\nCPI0_24:\nCPI3_1:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_25:\n\t.cell 2852213852874699394802404818944\nCPI0_26:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_27:\n\t.cell -51925123797727347860533901367993089276832742982736561123282146404303967691305\nCPI0_28:\n\t.cell 42366394968604382924961978311577521494088397560937941986516417411942289768448\nCPI0_29:\n\t.cell 316912652418240591808998408192\nCPI0_30:\n\t.cell -65536\nCPI0_31:\nCPI4_7:\nCPI5_6:\nCPI6_3:\n\t.cell 18446744073709551615\nCPI0_32:\nCPI6_12:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_33:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_34:\n\t.cell 24583888666393695532650366969576158756525115082842394412189664974634763761220\nCPI0_35:\n\t.cell 2535301202817642044428229017600\nCPI0_36:\nCPI4_1:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_37:\n\t.cell 18446744073709551455\nCPI0_38:\nCPI1_1:\n\t.cell -51925123797727347860533901367993089276832742982736561123282146404303967691304\nCPI0_39:\nCPI1_3:\nCPI2_3:\nCPI4_11:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_40:\n\t.cell -51925123797727347860533901367993089276832742982736561123282146404303967691302\nCPI0_41:\nCPI4_13:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_42:\n\t.cell 18769380743995212300389034589049388310205204473983825141177559932263854111261\nCPI0_43:\n\t.cell 53441571308530026295629037725716113410844152310593651252276104300570922188800\nCPI0_44:\nCPI4_9:\nCPI5_10:\nCPI6_5:\n\t.cell 316912650057057350374175801344\nCPI0_45:\nCPI5_5:\nCPI6_10:\n\t.cell 18446744073709551616\nCPI0_46:\n\t.cell -42641032332669793094364518708888968811130228883793010177944707421667279765504\nCPI0_47:\nCPI4_15:\nCPI5_7:\nCPI6_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_48:\nCPI3_3:\nCPI4_16:\nCPI5_8:\nCPI6_9:\n\t.cell 2852213850513516153367582212096\nCPI0_49:\nCPI4_3:\nCPI5_0:\n\t.cell -44877977326897262784168444354156441158329539312518651612887364914072161059015\nCPI0_50:\nCPI4_5:\nCPI5_2:\nCPI6_7:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_51:\nCPI4_8:\nCPI5_9:\nCPI6_4:\n\t.cell 9113247101063757011529551392225999353373832475738586725164814963572685668352\nCPI0_52:\nCPI2_1:\nCPI4_10:\n\t.cell -51925123797727347860533901367993089276832742982736561123282146404303967691303\nCPI0_53:\nCPI4_12:\n\t.cell -51925123797727347860533901367993089276832742982736561123282146404303967691301\nCPI0_54:\nCPI4_14:\n\t.cell -19842845693718681223700575128161794312353544377655891586123603641601145457669\nCPI0_55:\nCPI4_17:\nCPI5_11:\n\t.cell -22855268662888634416959001007683272581553766429815824879040851399374532509696\nCPI0_56:\nCPI4_18:\n\t.cell 24949152120555342893642076180256588724364794719800428814778150814029195509760\nCPI0_57:\nCPI4_19:\n\t.cell 31141783203015683621797532528857571251099921039851154102849540717378805956608\nCPI0_58:\n\t.cell -31616806598432371033271728083883777074658246048807116706115876445215061442560\nCPI0_59:\n\t.cell 28449210373611454402985489541711497976320196644878638971820198805980867198976\nCPI0_60:\n\t.cell 35455379387750452740306219009508352387317232033957919644426302550385159569408\nCPI0_61:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI4_2:\n\t.cell 18446744073709551456\nCPI6_2:\n\t.cell 8589934560\nCPI6_6:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI6_8:\n\t.cell -46321960365604724831933507365171173232996739913398926471486875190478029979648\nCPI6_13:\n\t.cell 37295821876700504889304837296037907613075394649501056392550260273557750677504\n","bytecode":{"object":"00020000000000020011000000000002000000000f01034f00000000010f00190000006001100270000002690410019700010000004f03550000008001000039000000400010043f0000000101200190000000350000c13d000000040140008c0000025a0000413d00000000010f043b000000e0011002700000026f0210009c000000580000a13d000002700210009c000000740000a13d000002710210009c0000013a0000213d000002740210009c0000014a0000613d000002750110009c0000025a0000c13d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000200110008c0000025a0000413d0000000401f00370000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b0000025a0000c13d000000000200041a0000026c032001970000000002000411000000000323004b000002130000c13d0000028402000041000000000302041a0000ff0004300190000002180000c13d0000028703300197000000000131019f00000100011001bf000000000012041b0000000001000019000009a00001042e0000000001000416000000000101004b0000025a0000c13d0000000006000411000000000106004b000000400000c13d0000028301000041000000800010043f000000840000043f0000028201000041000009a100010430000000000200041a0000026a01200197000000000161019f000000000010041b00000269010000410000000003000414000002690430009c0000000003018019000000c0013002100000026b011001c70000026c052001970000800d0200003900000003030000390000026d04000041099f09950000040f00000001012001900000025a0000613d0000000101000039000000000011041b0000002001000039000001000010044300000120000004430000026e01000041000009a00001042e000002790210009c000000dd0000213d0000027d0210009c000001a50000613d0000027e0210009c000001d10000613d0000027f0110009c0000025a0000c13d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000400110008c0000025a0000413d0000000401f00370000000000101043b001100000001001d0000026c0110009c0000025a0000213d00100000000f0353099f06620000040f000000100100035f0000002401100370000000000201043b0000001101000029099f08160000040f0000000001000019000009a00001042e000002760210009c0000017c0000613d000002770210009c000001820000613d000002780110009c0000025a0000c13d000000040140008a000000800110008c0000025a0000413d0000000401f00370000000000101043b0000002402f00370000000000202043b0000026c0320009c0000025a0000213d0000004403f00370000000000303043b0000026c0530009c0000025a0000213d0000006405f00370000000000605043b000002880560009c0000025a0000213d00000023056000390000028907000041000000000845004b000000000800001900000000080780190000028905500197000000000905004b0000000007008019000002890550009c000000000708c019000000000507004b0000025a0000c13d000000040760003900000000057f034f000000000505043b000002880850009c000001ef0000213d000000bf08500039000000200900008a000000000898016f000002880980009c000001ef0000213d000000400080043f000000800050043f00000000065600190000002406600039000000000446004b0000025a0000213d000000200470003900000000044f034f0000001f0650018f0000000507500272000000b50000613d00000000080000190000000509800210000000000a94034f000000000a0a043b000000a0099000390000000000a904350000000108800039000000000978004b000000ad0000413d000000000806004b000000c40000613d0000000507700210000000000474034f0000000306600210000000a007700039000000000807043300000000086801cf000000000868022f000000000404043b0000010006600089000000000464022f00000000046401cf000000000484019f0000000000470435000000a00450003900000000000404350000028404000041000000000404041a000000ff04400190000001370000613d0000000104000039001100000004001d000000000404041a000000020440008c000002600000613d00000002040000390000001105000029000000000045041b000000000402004b000000d70000c13d0000000004000416000000000441004b000006290000c13d0000008004000039099f06730000040f0000001101000029000000000011041b0000000001000019000009a00001042e0000027a0210009c000001c60000613d0000027b0210009c000001f50000613d0000027c0110009c0000025a0000c13d000000040140008a000000800110008c0000025a0000413d0000000401f00370000000000101043b001100000001001d0000002401f00370000000000101043b001000000001001d0000026c0110009c0000025a0000213d0000004401f00370000000000101043b000f00000001001d0000026c0110009c0000025a0000213d0000006401f00370000000000201043b000002880120009c0000025a0000213d00000023012000390000028903000041000000000541004b000000000500001900000000050380190000028901100197000000000601004b0000000003008019000002890110009c000000000305c019000000000103004b0000025a0000c13d000000040320003900000000013f034f000000000101043b000002880510009c000001ef0000213d000000bf05100039000000200700008a000000000575016f000002880650009c000001ef0000213d000e00000007001d000000400050043f000000800010043f00000000021200190000002402200039000000000242004b0000025a0000213d000000200230003900000000022f034f0000001f0310018f0000000504100272000001220000613d00000000050000190000000506500210000000000762034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b0000011a0000413d000000000503004b000001310000613d0000000504400210000000000242034f0000000303300210000000a004400039000000000504043300000000053501cf000000000535022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000252019f0000000000240435000000a00110003900000000000104350000028401000041000000000101041a000000ff011001900000025c0000c13d000000400100043d000002a502000041000002620000013d000002720210009c0000015e0000613d000002730110009c0000025a0000c13d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000200110008c0000025a0000413d0000000401f00370000000000101043b0000026c0210009c0000025a0000213d099f063e0000040f000001550000013d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000200110008c0000025a0000413d0000000401f00370000000000101043b0000026c0210009c0000025a0000213d099f06500000040f000000000101041a000000400200043d00000000001204350000026901000041000002690320009c0000000002018019000000400120021000000280011001c7000009a00001042e0000000001000416000000000101004b0000025a0000c13d000000040140008a000000200110008c0000025a0000413d0000000401f00370000000000601043b0000026c0160009c0000025a0000213d000000000100041a0000026c021001970000000005000411000000000252004b0000020e0000c13d000000000206004b0000003b0000613d0000026a01100197000000000161019f000000000010041b00000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000026b011001c70000800d0200003900000003030000390000026d04000041000002090000013d0000000001000416000000000101004b0000025a0000c13d000000000100041a0000026c01100197000001ce0000013d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000200110008c0000025a0000413d0000000401f00370000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b0000025a0000c13d000000000200041a0000026c032001970000000002000411000000000323004b000002130000c13d0000028402000041000000000302041a000001000400008a000000000343016f000000000313019f000000000032041b000000800010043f00000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000028a011001c70000800d0200003900000001030000390000028b04000041000002090000013d0000000001000416000000000101004b0000025a0000c13d000000040140008a000000600110008c0000025a0000413d0000000401f00370000000000101043b0000026c0210009c0000025a0000213d0000002402f00370000000000202043b0000026c0320009c0000025a0000213d000000000300041a0000026c043001970000000003000411000000000434004b0000021c0000c13d000002a603000041000000a00030043f000000a40020043f0000004402f00370000000000202043b000000c40020043f0000004402000039000000800020043f0000010002000039000000400020043f0000008002000039099f08910000040f0000000001000019000009a00001042e0000000001000416000000000101004b0000025a0000c13d0000028401000041000000000101041a000000ff011001900000000001000019000000010100c039000000800010043f0000028c01000041000009a00001042e000000040140008a000000800110008c0000025a0000413d0000000401f00370000000000101043b000002880210009c0000025a0000213d00000023021000390000028903000041000000000542004b000000000500001900000000050380190000028902200197000000000602004b0000000003008019000002890220009c000000000305c019000000000203004b0000025a0000c13d000000040210003900000000022f034f000000000302043b000002960230009c000001ef0000813d0000000502300210000000bf052000390011002000000092000000110550017f000002880650009c000002210000a13d000002980100004100000000001004350000004101000039000000040010043f0000029901000041000009a1000104300000000001000416000000000101004b0000025a0000c13d000000000100041a0000026c021001970000000005000411000000000252004b0000020e0000c13d0000026a01100197000000000010041b00000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000026b011001c70000800d0200003900000003030000390000026d040000410000000006000019099f09950000040f00000001012001900000025a0000613d0000000001000019000009a00001042e0000028101000041000000800010043f000000840050043f0000028201000041000009a1000104300000028101000041000000800010043f000000840020043f0000028201000041000009a1000104300000028501000041000000800010043f0000028601000041000009a1000104300000028101000041000000800010043f000000840030043f0000028201000041000009a100010430000000400050043f000000800030043f00000024011000390000000002120019000000000542004b0000025a0000213d000000000303004b000002300000613d000000a00300003900000000051f034f000000000505043b00000000035304360000002001100039000000000521004b0000022a0000413d0000002401f00370000000000201043b000002880120009c0000025a0000213d00000023012000390000028903000041000000000541004b000000000500001900000000050380190000028901100197000000000601004b0000000003008019000002890110009c000000000305c019000000000103004b0000025a0000c13d000000040120003900000000011f034f000000000301043b000002880130009c000001ef0000213d00000005053002100000003f01500039000000110110017f000000400600043d0000000001160019001000000006001d000000000661004b00000000060000190000000106004039000002880710009c000001ef0000213d0000000106600190000001ef0000c13d000000400010043f00000010010000290000000001310436000f00000001001d00000024022000390000000005250019000000000645004b000002690000a13d0000000001000019000009a1000104300000000101000039000000000201041a000000020220008c000002f30000c13d000000400100043d000002a40200004100000000002104350000026902000041000002690310009c0000000001028019000000400110021000000295011001c7000009a100010430000000000303004b000002740000613d0000000f0300002900000000062f034f000000000606043b0000026c0760009c0000025a0000213d00000000036304360000002002200039000000000652004b0000026c0000413d0000004402f00370000000000202043b000002880320009c0000025a0000213d00000023032000390000028905000041000000000643004b000000000600001900000000060580190000028903300197000000000703004b0000000005008019000002890330009c000000000506c019000000000305004b0000025a0000c13d000000040320003900000000033f034f000000000303043b000002880530009c000001ef0000213d00000005053002100000003f06500039000000110660017f000000400700043d0000000006670019000700000007001d000000000776004b00000000070000190000000107004039000002880860009c000001ef0000213d0000000107700190000001ef0000c13d000000400060043f0000000706000029000000000036043500000024022000390000000005250019000000000645004b0000025a0000213d000000000303004b000002a90000613d000000070300002900000000062f034f000000000606043b0000026c0760009c0000025a0000213d000000200330003900000000006304350000002002200039000000000652004b000002a00000413d0000006402f00370000000000202043b000002880320009c0000025a0000213d00000023032000390000028905000041000000000643004b000000000600001900000000060580190000028903300197000000000703004b0000000005008019000002890330009c000000000506c019000000000305004b0000025a0000c13d000000040320003900000000033f034f000000000603043b000002880360009c000001ef0000213d00000005056002100000003f03500039000000110330017f000000400700043d0000000003370019000400000007001d000000000773004b00000000070000190000000107004039000002880830009c000001ef0000213d0000000107700190000001ef0000c13d000000400030043f0000000403000029000000000063043500000024032000390000000005350019000000000745004b0000025a0000213d000000000606004b000003cc0000c13d0000028402000041000000000202041a000000ff02200190000001370000613d0000000101000039000100000001001d000000000201041a000000020220008c000002600000613d00000002020000390000000101000029000000000021041b00000010020000290000000003020433000000800200043d000000000332004b000004410000c13d00000007030000290000000003030433000000000332004b000004410000c13d00000004030000290000000003030433000000000332004b000004410000c13d000000000302004b000004800000c13d0000000001000416000000000101004b000006290000c13d0000047e0000013d0000000202000039000000000021041b0000000f0100006b000002fa0000c13d000000400100043d0000029402000041000002620000013d000000110100006b000003070000c13d000000400100043d000002a1020000410000000000210435000000040210003900000000000204350000026902000041000002690310009c0000000001028019000000400110021000000299011001c7000009a100010430000000100100006b000003120000c13d0000000002000416000000110120006b000006290000c13d0000000f01000029099f08160000040f0000000001000411000c00000001001d000d026c0010019b0000032a0000013d000000400200043d00000020012000390000028d03000041000000000031043500000064012000390000001103000029000000000031043500000044012000390000000f030000290000000000310435000000640100003900000000001204350000000001000411000c00000001001d0000026c031001970000002401200039000d00000003001d00000000003104350000028e0120009c000001ef0000213d000000a001200039000000400010043f0000001001000029099f08910000040f0000000d0100002900000000001004350000028f01000041000000200010043f00000269030000410000000001000414000002690210009c0000000001038019000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000101041a000b00000001001d0000000c0100002900000000001004350000029101000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000a00000001001d0000000d0100002900000000001004350000028f01000041000000200010043f00000269030000410000000001000414000002690210009c0000000001038019000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000101041a00000000001004350000000a01000029000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000a00000001001d000000800100043d000900000001001d000002880110009c000001ef0000213d0000000a01000029000000000101041a000000010210019000000001021002700000007f0320018f000000000302c019000800000003001d0000001f0230008c00000000020000190000000102002039000000000121013f00000001011001900000037d0000613d000002980100004100000000001004350000002201000039000001f20000013d0000000801000029000000200110008c0000039d0000413d0000000a01000029000000000010043500000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000292011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d00000009030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000008010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000039d0000813d000000000002041b0000000102200039000000000312004b000003990000413d00000009010000290000001f0110008c0000041c0000a13d0000000a01000029000000000010043500000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000292011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d00000009030000290000000e02300180000000a003000039000000000101043b000003bd0000613d00000020040000390000000003000019000000000504001900000080045000390000000004040433000000000041041b000000200450003900000001011000390000002003300039000000000623004b000003b30000413d000000a003500039000000090220006c000003c80000813d00000009020000290000000302200210000000f80220018f000000010400008a000000000224022f000000000242013f0000000003030433000000000223016f000000000021041b0000000901000029000000010110021000000001011001bf000004280000013d00000289060000410000000407000029000003d70000013d000000200770003900000000088a0019000000000008043500000000009704350000002003300039000000000853004b000000000f01034f000002d40000813d00000000083f034f000000000808043b000002880980009c0000025a0000213d000000000b2800190000004308b00039000000000948004b000000000900001900000000090680190000028908800197000000000a08004b000000000a000019000000000a064019000002890880009c000000000a09c01900000000080a004b0000025a0000c13d000000240cb000390000000008cf034f000000000808043b000002880980009c000001ef0000213d0000003f09800039000000110a90017f000000400900043d000000000aa90019000000000d9a004b000000000d000019000000010d004039000002880ea0009c000001ef0000213d000000010dd00190000001ef0000c13d0000004000a0043f000000000a890436000000000b8b0019000000440bb00039000000000b4b004b0000025a0000213d000000200bc0003900000000010f034f000000000bbf034f000000050c8002720000040c0000613d000000000d000019000000050ed00210000000000fea0019000000000eeb034f000000000e0e043b0000000000ef0435000000010dd00039000000000ecd004b000004040000413d0000001f0d800190000003cf0000613d000000050cc00210000000000bcb034f000000000cca0019000000030dd00210000000000e0c0433000000000ede01cf000000000ede022f000000000b0b043b000001000dd00089000000000bdb022f000000000bdb01cf000000000beb019f0000000000bc0435000003cf0000013d000000090100006b0000000001000019000004200000613d000000a00100043d00000009040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f0000000a02000029000000000012041b0000000d0100002900000000001004350000028f01000041000000200010043f00000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000201041a000000010300008a000000000332004b000004440000c13d000002980100004100000000001004350000001101000039000001f20000013d000000400100043d0000029702000041000002620000013d0000000102200039000000000021041b000000400100043d0000008002100039000000c003000039000000000032043500000060021000390000001103000029000000000032043500000040021000390000001003000029000000000032043500000020021000390000000f0300002900000000003204350000000c020000290000000000210435000000c003100039000000800200043d0000000000230435000000e003100039000000000402004b000004630000613d00000000040000190000000005340019000000a006400039000000000606043300000000006504350000002004400039000000000524004b0000045c0000413d00000000033200190000000000030435000000a0031000390000000b040000290000000000430435000000ff022000390000000e0220017f0000026903000041000002690410009c00000000010380190000004001100210000002690420009c00000000020380190000006002200210000000000112019f0000000002000414000002690420009c0000000002038019000000c002200210000000000112019f0000026b011001c70000800d0200003900000001030000390000029304000041099f09950000040f00000001012001900000025a0000613d0000000101000039000000da0000013d000000000400001900000000030000190000000f01000029000004870000013d0000000104400039000000000524004b000004970000813d000000000542004b0000062c0000a13d0000000505400210000000000615001900000000060604330000026c06600198000004840000c13d000000a00550003900000000050504330000000003350019000000000553004b000000000500001900000001050040390000000105500190000004840000613d0000043d0000013d0000000001000416000000000113004b000006290000c13d000e00000000001d000000100100002900000000010104330000000e0110006c0000062c0000a13d0000000e0300002900000005023002100000002001200039000000a0022000390000000002020433000d00000002001d000000100210002900000000020204330008026c0020019b00000007020000290000000002020433000000000232004b0000062c0000a13d00000007021000290000000002020433000c026c0020019b000000040200002900000000020204330000000e0220006c0000062c0000a13d0000000c0200006b000006300000613d0000000d0200006b000002fc0000613d00000004011000290000000001010433000900000001001d000000080100006b000004d50000613d000000400200043d00000020012000390000028d03000041000000000031043500000064012000390000000d03000029000000000031043500000044012000390000000c030000290000000000310435000000640100003900000000001204350000000001000411000600000001001d0000026c031001970000002401200039000b00000003001d00000000003104350000028e0120009c000001ef0000213d000000a001200039000000400010043f0000000801000029099f08910000040f0000052b0000013d0000029a0100004100000000001004390000000001000410000f00000001001d00000004001004430000000001000414000002690210009c0000026901008041000000c0011002100000029b011001c70000800a02000039099f099a0000040f0000000102200190000006330000613d000000000101043b0000000d0110006c000006340000413d00000000010004140000000c02000029000000040220008c000004ed0000c13d00000000010000310000000102000029000004fa0000013d000002690210009c0000026901008041000000c0011002100000026b011001c700008009020000390000000d030000290000000c040000290000000005000019099f09950000040f00010000000103550000006001100270000002690010019d0000026901100197000000000301004b000005260000613d000002880310009c000001ef0000213d0000003f03100039000000110430017f000000400300043d0000000004430019000000000534004b00000000050000190000000105004039000002880640009c000001ef0000213d0000000105500190000001ef0000c13d000000400040043f000000000313043600000001040003670000000505100272000005170000613d000000000600001900000005076002100000000008730019000000000774034f000000000707043b00000000007804350000000106600039000000000756004b0000050f0000413d0000001f01100190000005260000613d0000000505500210000000000454034f00000000035300190000000301100210000000000503043300000000051501cf000000000515022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000151019f000000000013043500000001012001900000063b0000613d0000000001000411000600000001001d000b026c0010019b0000000b0100002900000000001004350000029d01000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000101041a000300000001001d000000060100002900000000001004350000029e01000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000f00000001001d0000000b0100002900000000001004350000029d01000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000101041a00000000001004350000000f01000029000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000a00000001001d00000009010000290000000021010434000200000002001d000f00000001001d000002880110009c000001ef0000213d0000000a01000029000000000101041a000000010210019000000001011002700000007f0310018f000000000301c019000500000003001d0000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b000003790000c13d0000000501000029000000200110008c000005990000413d0000000a0100002900000000001004350000000001000414000002690210009c0000026901008041000000c00110021000000292011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d0000000f030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000005010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000005990000813d000000000002041b0000000102200039000000000312004b000005950000413d0000000f010000290000001f0110008c000005c70000a13d0000000a0100002900000000001004350000000001000414000002690210009c0000026901008041000000c00110021000000292011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d0000000f0300002900000011033001800000002002000039000000000101043b0000000906000029000005b70000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000005af0000413d0000000f0330006c000005c30000813d0000000f030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f00000009022000290000000002020433000000000232016f000000000021041b0000000f01000029000000010110021000000001011001bf000005d40000013d0000000f0100006b0000000001000019000005cc0000613d000000020100002900000000010104330000000f040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f0000000a02000029000000000012041b0000000b0100002900000000001004350000029d01000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f00000001022001900000025a0000613d000000000101043b000000000201041a000000010300008a000000000332004b0000043d0000613d0000000102200039000000000021041b000000400100043d0000008002100039000000c003000039000000000032043500000060021000390000000d0300002900000000003204350000004002100039000000080300002900000000003204350000002002100039000000060300002900000000003204350000000c02000029000000000021043500000009070000290000000002070433000000c0031000390000000000230435000000e003100039000000000402004b000006080000613d000000000400001900000000053400190000002004400039000000000674001900000000060604330000000000650435000000000524004b000006010000413d00000000033200190000000000030435000000a00310003900000003040000290000000000430435000000ff02200039000000110220017f000002690310009c000002690400004100000000010480190000004001100210000002690320009c00000000020480190000006002200210000000000112019f0000000002000414000002690320009c0000000002048019000000c002200210000000000112019f0000026b011001c70000800d0200003900000001030000390000029f04000041099f09950000040f00000001012001900000025a0000613d0000000e02000029000e00010020003d000000800100043d0000000e0110006b0000049b0000413d0000047e0000013d000000400100043d000002a302000041000002620000013d000002980100004100000000001004350000003201000039000001f20000013d000000400100043d000002a202000041000002620000013d000000000001042f000000400100043d000002a002000041000000000021043500000004021000390000000f030000290000000000320435000003010000013d000000400100043d0000029c02000041000002620000013d0000026c0110019700000000001004350000028f01000041000000200010043f00000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000290011001c70000801002000039099f099a0000040f00000001022001900000064e0000613d000000000101043b000000000001042d0000000001000019000009a1000104300000026c0110019700000000001004350000029d01000041000000200010043f00000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000290011001c70000801002000039099f099a0000040f0000000102200190000006600000613d000000000101043b000000000001042d0000000001000019000009a100010430000000000100041a0000026c021001970000000001000411000000000212004b000006680000c13d000000000001042d000000400200043d00000281030000410000000000320435000000040320003900000000001304350000026901000041000002690320009c0000000002018019000000400120021000000299011001c7000009a100010430000b0000000000020000026c05300198000007ed0000613d000000000301004b000007f00000613d0008026c0020019c000a00000004001d000700000005001d000600000001001d000006950000613d000000400200043d00000020042000390000028d0300004100000000003404350000006403200039000000000013043500000044012000390000000000510435000000640100003900000000001204350000000001000411000900000001001d0000026c031001970000002401200039000b00000003001d0000000000310435000002a70120009c000007e90000813d000000a001200039000000400010043f0000000801000029099f08910000040f0000000b01000029000006ee0000013d0000029a0100004100000000001004390000000001000410000b00000001001d000000040010044300000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000029b011001c70000800a02000039099f099a0000040f0000000102200190000008000000613d000000000101043b0000000603000029000000000131004b0000000704000029000008010000413d0000000001000414000000040240008c000006af0000c13d00000001020000390000000001000031000006bb0000013d0000026902000041000002690510009c0000000001028019000000c0011002100000026b011001c700008009020000390000000005000019099f09950000040f00010000000103550000006001100270000002690010019d0000026901100197000000000301004b000006e90000613d000002880310009c000007e90000213d0000003f03100039000000200400008a000000000343016f000000400400043d0000000003340019000000000543004b00000000050000190000000105004039000002880630009c000007e90000213d0000000105500190000007e90000c13d000000400030043f0000001f0310018f000000000414043600000001050003670000000501100272000006da0000613d000000000600001900000005076002100000000008740019000000000775034f000000000707043b00000000007804350000000106600039000000000716004b000006d20000413d000000000603004b000006e90000613d0000000501100210000000000515034f00000000011400190000000303300210000000000401043300000000043401cf000000000434022f000000000505043b0000010003300089000000000535022f00000000033501cf000000000343019f000000000031043500000001012001900000080d0000613d0000000001000411000900000001001d0000026c01100197000b00000001001d00000000001004350000029d01000041000000200010043f00000269030000410000000001000414000002690210009c0000000001038019000000c00110021000000290011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000000101043b000000000101041a000400000001001d000000090100002900000000001004350000029e01000041000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000000101043b000500000001001d0000000b0100002900000000001004350000029d01000041000000200010043f00000269030000410000000001000414000002690210009c0000000001038019000000c00110021000000290011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000000101043b000000000101041a00000000001004350000000501000029000000200010043f0000000001000414000002690210009c0000026901008041000000c00110021000000290011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000000401043b0000000a010000290000000065010434000002880150009c000007e90000213d000000000104041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b000007f60000c13d000000200130008c000500000004001d000300000005001d0000075e0000413d000100000003001d000200000006001d000000000040043500000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000292011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d00000003050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000001010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000000050400002900000002060000290000075e0000813d000000000002041b0000000102200039000000000312004b0000075a0000413d0000001f0150008c0000078b0000a13d000000000040043500000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000292011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000200200008a000000030700002900000000032701700000002002000039000000000101043b0000000a060000290000077c0000613d0000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000007740000413d000000000373004b000007870000813d0000000303700210000000f80330018f000000010400008a000000000334022f000000000343013f00000000026200190000000002020433000000000232016f000000000021041b000000010170021000000001011001bf0000000504000029000007960000013d000000000105004b00000000010000190000078f0000613d00000000010604330000000302500210000000010300008a000000000223022f000000000232013f000000000121016f0000000102500210000000000121019f000000000014041b0000000b0100002900000000001004350000029d01000041000000200010043f00000269010000410000000002000414000002690320009c0000000002018019000000c00120021000000290011001c70000801002000039099f099a0000040f0000000102200190000007e70000613d000000000101043b000000000201041a000000010300008a000000000332004b000007fa0000613d0000000102200039000000000021041b000000400100043d0000008002100039000000c0030000390000000000320435000000600210003900000006030000290000000000320435000000400210003900000008030000290000000000320435000000200210003900000009030000290000000000320435000000070200002900000000002104350000000a070000290000000002070433000000c0031000390000000000230435000000e003100039000000000402004b000007ca0000613d000000000400001900000000053400190000002004400039000000000674001900000000060604330000000000650435000000000524004b000007c30000413d00000000033200190000000000030435000000a00310003900000004040000290000000000430435000000ff02200039000000200300008a000000000232016f0000026903000041000002690410009c00000000010380190000004001100210000002690420009c00000000020380190000006002200210000000000112019f0000000002000414000002690420009c0000000002038019000000c002200210000000000112019f0000026b011001c70000800d0200003900000001030000390000029f04000041099f09950000040f0000000101200190000007e70000613d000000000001042d0000000001000019000009a100010430000002980100004100000000001004350000004101000039000007fd0000013d000000400100043d000002a2020000410000080f0000013d000000400100043d000002a102000041000000000021043500000004021000390000000000020435000008070000013d000002980100004100000000001004350000002201000039000007fd0000013d000002980100004100000000001004350000001101000039000000040010043f0000029901000041000009a100010430000000000001042f000000400100043d000002a002000041000000000021043500000004021000390000000b0300002900000000003204350000026902000041000002690310009c0000000001028019000000400110021000000299011001c7000009a100010430000000400100043d0000029c0200004100000000002104350000026902000041000002690310009c0000000001028019000000400110021000000295011001c7000009a1000104300003000000000002000300000002001d000200000001001d0000029a0100004100000000001004390000000001000410000100000001001d000000040010044300000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000029b011001c70000800a02000039099f099a0000040f00000001022001900000087b0000613d000000000101043b0000000303000029000000000131004b0000087c0000413d000000000100041400000002020000290000026c04200197000000040240008c000008340000c13d00000001020000390000000001000031000008440000013d0000026902000041000002690510009c0000000001028019000000c001100210000000000203004b0000083e0000613d0000026b011001c7000080090200003900000000050000190000083f0000013d0000000002040019099f09950000040f00010000000103550000006001100270000002690010019d0000026901100197000000000301004b000008720000613d000002960310009c000008750000813d0000003f03100039000000200400008a000000000343016f000000400400043d0000000003340019000000000543004b00000000050000190000000105004039000002880630009c000008750000213d0000000105500190000008750000c13d000000400030043f0000001f0310018f000000000414043600000001050003670000000501100272000008630000613d000000000600001900000005076002100000000008740019000000000775034f000000000707043b00000000007804350000000106600039000000000716004b0000085b0000413d000000000603004b000008720000613d0000000501100210000000000515034f00000000011400190000000303300210000000000401043300000000043401cf000000000434022f000000000505043b0000010003300089000000000535022f00000000033501cf000000000343019f00000000003104350000000101200190000008880000613d000000000001042d000002980100004100000000001004350000004101000039000000040010043f0000029901000041000009a100010430000000000001042f000000400100043d000002a00200004100000000002104350000000402100039000000010300002900000000003204350000026902000041000002690310009c0000000001028019000000400110021000000299011001c7000009a100010430000000400100043d0000029c0200004100000000002104350000026902000041000002690310009c0000000001028019000000400110021000000295011001c7000009a1000104300005000000000002000000003402043400000000020004140000026c09100197000000040190008c000008ea0000c13d000000600a0000390000000002000032000008c60000613d000002960120009c000009670000813d0000003f01200039000000200300008a000000000131016f000000400a00043d00000000011a00190000000003a1004b00000000030000190000000103004039000002880410009c000009670000213d0000000103300190000009670000c13d000000400010043f0000001f0120018f00000000032a043600000001040003670000000502200272000008b70000613d000000000500001900000005065002100000000007630019000000000664034f000000000606043b00000000006704350000000105500039000000000625004b000008af0000413d000000000501004b000008c60000613d0000000502200210000000000424034f00000000022300190000000301100210000000000302043300000000031301cf000000000313022f000000000404043b0000010001100089000000000414022f00000000011401cf000000000131019f00000000001204350000000002000415000000050220008a000000050220021000000000010a0433000000000301004b000009320000c13d00020000000a001d000300000009001d000002a90100004100000000001004390000000401000039000100000001001d000000040010044300000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000029b011001c70000800202000039099f099a0000040f00000001022001900000097e0000613d0000000002000415000000050220008a0000000502200210000000000101043b000000000101004b000000020a0000290000094a0000c13d000000400100043d000002aa020000410000000000210435000000040210003900000001030000290000098d0000013d0000026901000041000002690540009c00000000040180190000006004400210000002690530009c00000000030180190000004003300210000000000334019f000002690420009c0000000002018019000000c001200210000000000113019f0000000002090019000300000009001d099f09950000040f0000000309000029000000600a0000390000008003000039000100000001035500000000040100190000006004400270000002690040019d00000269054001980000092a0000613d0000003f03500039000002a803300197000000400a00043d00000000033a00190000000004a3004b00000000040000190000000104004039000002880630009c000009670000213d0000000104400190000009670000c13d000000400030043f0000001f0450018f00000000035a043600000005055002720000091b0000613d000000000600001900000005076002100000000008730019000000000771034f000000000707043b00000000007804350000000106600039000000000756004b000009130000413d000000000604004b0000092a0000613d0000000505500210000000000151034f00000000055300190000000304400210000000000605043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000015043500000000010a04330000000102200190000009730000613d0000000002000415000000040220008a0000000502200210000000000301004b000009350000613d000000050220027000000000020a001f000009500000013d00020000000a001d000002a9010000410000000000100439000000040090044300000269010000410000000002000414000002690320009c0000000002018019000000c0012002100000029b011001c70000800202000039099f099a0000040f00000001022001900000097e0000613d0000000002000415000000040220008a0000000502200210000000000101043b000000000101004b000000020a000029000009880000613d00000000010a0433000000050220027000000000020a001f000000000201004b0000000309000029000009640000613d0000028902000041000000200310008c000000000300001900000000030240190000028901100197000000000401004b000000000200a019000002890110009c000000000203c019000000000102004b000009650000c13d0000002001a000390000000001010433000000000201004b0000000002000019000000010200c039000000000221004b000009650000c13d000000000101004b0000096d0000613d000000000001042d0000000001000019000009a100010430000002980100004100000000001004350000004101000039000000040010043f0000029901000041000009a100010430000000400100043d000002ab020000410000000000210435000000040210003900000000009204350000098e0000013d000000000201004b0000097f0000c13d000000400100043d0000029c0200004100000000002104350000026902000041000002690310009c0000000001028019000000400110021000000295011001c7000009a100010430000000000001042f0000026902000041000002690410009c0000000001028019000002690430009c000000000302801900000040023002100000006001100210000000000121019f000009a100010430000000400100043d000002aa0200004100000000002104350000000402100039000000030300002900000000003204350000026902000041000002690310009c0000000001028019000000400110021000000299011001c7000009a100010430000000000001042f00000998002104210000000102000039000000000001042d0000000002000019000000000001042d0000099d002104230000000102000039000000000001042d0000000002000019000000000001042d0000099f00000432000009a00001042e000009a1000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e00000000200000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000000000000000000008da5cb5a00000000000000000000000000000000000000000000000000000000d5016af600000000000000000000000000000000000000000000000000000000f2fde38a00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000fba07f5f00000000000000000000000000000000000000000000000000000000d5016af700000000000000000000000000000000000000000000000000000000d53a822f000000000000000000000000000000000000000000000000000000008da5cb5b00000000000000000000000000000000000000000000000000000000b6f9750100000000000000000000000000000000000000000000000000000000c4b7f65b000000000000000000000000000000000000000000000000000000006aa633b5000000000000000000000000000000000000000000000000000000006aa633b600000000000000000000000000000000000000000000000000000000715018a600000000000000000000000000000000000000000000000000000000784990540000000000000000000000000000000000000000000000000000000001e336670000000000000000000000000000000000000000000000000000000014ed8da700000000000000000000000000000000000000000000000000000000522f68150000000000000000000000000000000000000020000000000000000000000000118cdaa70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000008000000000000000001e4fbdf7000000000000000000000000000000000000000000000000000000008d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd75daa87a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000800000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000ffffffffffffffff800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000200000008000000000000000003659fce67df53590a7b123b78110e4a82622aed9b1078a60fe06aa6072113644000000000000000000000000000000000000002000000080000000000000000023b872dd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff5f8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd802000000000000000000000000000000000000400000000000000000000000008d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddda0200000000000000000000000000000000000020000000000000000000000000297f17d10090e4dfa4e81099935283e1484b1f7138b03587e42793e2b091fa1d7626db820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000010000000000000000a1ba07ee000000000000000000000000000000000000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000009cc7f708afc65944829bd487b90b72536b1951864fbfc14e125fc972a6507f3902000002000000000000000000000000000000240000000000000000000000001425ea42000000000000000000000000000000000000000000000000000000008d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd98d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062dddbd42158eb0ea2dc2dce92d3cd105f32a6a4dbc2016fd376f6adbd28bb3dc7b3fbcd786059000000000000000000000000000000000000000000000000000000003728b83d0000000000000000000000000000000000000000000000000000000044d99fea00000000000000000000000000000000000000000000000000000000ba198589000000000000000000000000000000000000000000000000000000003ee5aeb5000000000000000000000000000000000000000000000000000000004e63089900000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff6000000000000000000000000000000000000000000000000000000001ffffffe01806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b839996b315000000000000000000000000000000000000000000000000000000005274afe700000000000000000000000000000000000000000000000000000000c7f028461b25bada9761f84a1446da7064e1592ffae019ead6f19aa1ef52985e"},"methodIdentifiers":{"bridge(uint256,address,address,bytes)":"78499054","bridgeIndex(address)":"fba07f5f","initialize(bool)":"d53a822f","isEnabled()":"6aa633b6","multiRelease(uint256[],address[],address[],bytes[])":"14ed8da7","owner()":"8da5cb5b","release(uint256,address,address,bytes)":"c4b7f65b","releaseIndex(address)":"d5016af7","renounceOwnership()":"715018a6","setIsEnabled(bool)":"b6f97501","transferOwnership(address)":"f2fde38b","withdrawEther(address,uint256)":"522f6815","withdrawToken(address,address,uint256)":"01e33667"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 7:\"contracts/Bridge.sol\"\nobject \"Bridge_1556\" {\n    code {\n        {\n            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 7:1669:1679  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(_1, shl(224, 0x1e4fbdf7))\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_1, 4), /** @src 0:1297:1298  \"0\" */ 0x00)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n            }\n            let _2 := sload(/** @src 0:1297:1298  \"0\" */ 0x00)\n            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n            sstore(/** @src 0:1297:1298  \"0\" */ 0x00, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 7:1669:1679  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _3 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 0:1297:1298  \"0\" */ 0x00, 0x00, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 7:1669:1679  \"msg.sender\" */ caller())\n            /// @src 6:1713:1714  \"1\"\n            sstore(0x01, 0x01)\n            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n            let _4 := datasize(\"Bridge_1556_deployed\")\n            codecopy(_3, dataoffset(\"Bridge_1556_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 3:\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\", 4:\"@openzeppelin/contracts/utils/Address.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\", 7:\"contracts/Bridge.sol\"\n    object \"Bridge_1556_deployed\" {\n        code {\n            {\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x01e33667 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value0 := abi_decode_address_12429()\n                        let value := calldataload(36)\n                        let _4 := sub(shl(160, 1), 1)\n                        let _5 := and(value, _4)\n                        if iszero(eq(value, _5)) { revert(_3, _3) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                        /// @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 32), shl(224, 0xa9059cbb))\n                        mstore(/** @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ add(expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36), _5)\n                        mstore(add(/** @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 68), calldataload(68))\n                        /// @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 68)\n                        let newFreePtr := add(expr_mpos, 128)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 36)\n                        }\n                        mstore(_1, newFreePtr)\n                        /// @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\"\n                        fun_callOptionalReturn(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(/** @src 7:5267:5280  \"IERC20(token)\" */ value0, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _4), /** @src 3:1412:1455  \"abi.encodeCall(token.transfer, (to, value))\" */ expr_mpos)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        return(_3, _3)\n                    }\n                    case 0x14ed8da7 {\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _6 := 0xffffffffffffffff\n                        if gt(offset, _6) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let _7 := calldataload(add(_2, offset))\n                        let _8 := 36\n                        let _9 := array_allocation_size_array_uint256_dyn(_7)\n                        let memPtr := mload(_1)\n                        finalize_allocation(memPtr, _9)\n                        let dst := memPtr\n                        mstore(memPtr, _7)\n                        let _10 := 0x20\n                        dst := add(memPtr, _10)\n                        let srcEnd := add(add(offset, shl(5, _7)), _8)\n                        if gt(srcEnd, calldatasize()) { revert(_3, _3) }\n                        let src := add(offset, _8)\n                        for { } lt(src, srcEnd) { src := add(src, _10) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _10)\n                        }\n                        let offset_1 := calldataload(_8)\n                        if gt(offset_1, _6) { revert(_3, _3) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_3, _3) }\n                        let _11 := calldataload(add(_2, offset_1))\n                        let _12 := array_allocation_size_array_uint256_dyn(_11)\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation(memPtr_1, _12)\n                        let dst_1 := memPtr_1\n                        mstore(memPtr_1, _11)\n                        dst_1 := add(memPtr_1, _10)\n                        let srcEnd_1 := add(add(offset_1, shl(5, _11)), _8)\n                        if gt(srcEnd_1, calldatasize()) { revert(_3, _3) }\n                        let src_1 := add(offset_1, _8)\n                        for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _10) }\n                        {\n                            mstore(dst_1, abi_decode_address(src_1))\n                            dst_1 := add(dst_1, _10)\n                        }\n                        let offset_2 := calldataload(68)\n                        if gt(offset_2, _6) { revert(_3, _3) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_3, _3) }\n                        let _13 := calldataload(add(_2, offset_2))\n                        let _14 := array_allocation_size_array_uint256_dyn(_13)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation(memPtr_2, _14)\n                        let dst_2 := memPtr_2\n                        mstore(memPtr_2, _13)\n                        dst_2 := add(memPtr_2, _10)\n                        let srcEnd_2 := add(add(offset_2, shl(5, _13)), _8)\n                        if gt(srcEnd_2, calldatasize()) { revert(_3, _3) }\n                        let src_2 := add(offset_2, _8)\n                        for { } lt(src_2, srcEnd_2) { src_2 := add(src_2, _10) }\n                        {\n                            mstore(dst_2, abi_decode_address(src_2))\n                            dst_2 := add(dst_2, _10)\n                        }\n                        let offset_3 := calldataload(100)\n                        if gt(offset_3, _6) { revert(_3, _3) }\n                        if iszero(slt(add(offset_3, 35), calldatasize())) { revert(_3, _3) }\n                        let _15 := calldataload(add(_2, offset_3))\n                        let _16 := array_allocation_size_array_uint256_dyn(_15)\n                        let memPtr_3 := mload(_1)\n                        finalize_allocation(memPtr_3, _16)\n                        let dst_3 := memPtr_3\n                        mstore(memPtr_3, _15)\n                        dst_3 := add(memPtr_3, _10)\n                        let srcEnd_3 := add(add(offset_3, shl(5, _15)), _8)\n                        if gt(srcEnd_3, calldatasize()) { revert(_3, _3) }\n                        let src_3 := add(offset_3, _8)\n                        for { } lt(src_3, srcEnd_3) { src_3 := add(src_3, _10) }\n                        {\n                            let innerOffset := calldataload(src_3)\n                            if gt(innerOffset, _6) { revert(_3, _3) }\n                            mstore(dst_3, abi_decode_bytes(add(add(offset_3, innerOffset), _8), calldatasize()))\n                            dst_3 := add(dst_3, _10)\n                        }\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        if /** @src 7:1581:1595  \"!s().isEnabled\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0xff))\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        {\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            let _17 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            mstore(_17, shl(224, 0x4e630899))\n                            revert(_17, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 6:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 7:3194:3208  \"amounts.length\"\n                        let expr := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3194:3208  \"amounts.length\" */ memPtr)\n                        /// @src 7:3194:3225  \"amounts.length != tokens.length\"\n                        let _18 := eq(expr, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3212:3225  \"tokens.length\" */ memPtr_1))\n                        /// @src 7:3194:3264  \"amounts.length != tokens.length || amounts.length != recipients.length\"\n                        let expr_1 := /** @src 7:3194:3225  \"amounts.length != tokens.length\" */ iszero(_18)\n                        /// @src 7:3194:3264  \"amounts.length != tokens.length || amounts.length != recipients.length\"\n                        if _18\n                        {\n                            expr_1 := /** @src 7:3229:3264  \"amounts.length != recipients.length\" */ iszero(eq(expr, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3247:3264  \"recipients.length\" */ memPtr_2)))\n                        }\n                        /// @src 7:3194:3302  \"amounts.length != tokens.length || amounts.length != recipients.length || amounts.length != metadatas.length\"\n                        let expr_2 := expr_1\n                        if iszero(expr_1)\n                        {\n                            expr_2 := /** @src 7:3268:3302  \"amounts.length != metadatas.length\" */ iszero(eq(expr, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3286:3302  \"metadatas.length\" */ memPtr_3)))\n                        }\n                        /// @src 7:3190:3324  \"if (amounts.length != tokens.length || amounts.length != recipients.length || amounts.length != metadatas.length) revert InvalidArgs()\"\n                        if expr_2\n                        {\n                            /// @src 7:3311:3324  \"InvalidArgs()\"\n                            let _19 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:3311:3324  \"InvalidArgs()\"\n                            mstore(_19, shl(225, 0x50dd03f7))\n                            revert(_19, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 7:3331:3346  \"uint256 tAmount\"\n                        let var_tAmount := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _3\n                        /// @src 7:3358:3371  \"uint256 i = 0\"\n                        let var_i := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _3\n                        /// @src 7:3353:3481  \"for (uint256 i = 0; i < amounts.length; i++) {...\"\n                        for { }\n                        /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 1\n                        /// @src 7:3358:3371  \"uint256 i = 0\"\n                        {\n                            /// @src 7:3393:3396  \"i++\"\n                            var_i := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ add(/** @src 7:3393:3396  \"i++\" */ var_i, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 1)\n                        }\n                        /// @src 7:3393:3396  \"i++\"\n                        {\n                            /// @src 7:3373:3391  \"i < amounts.length\"\n                            if iszero(lt(var_i, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3377:3391  \"amounts.length\" */ memPtr)))\n                            /// @src 7:3373:3391  \"i < amounts.length\"\n                            { break }\n                            /// @src 7:3406:3475  \"if (tokens[i] == address(0)) {...\"\n                            if /** @src 7:3410:3433  \"tokens[i] == address(0)\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(mload(/** @src 7:3410:3419  \"tokens[i]\" */ memory_array_index_access_address_dyn(memPtr_1, var_i)), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 7:3406:3475  \"if (tokens[i] == address(0)) {...\"\n                            {\n                                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                                let sum := add(var_tAmount, mload(/** @src 7:3456:3466  \"amounts[i]\" */ memory_array_index_access_address_dyn(memPtr, var_i)))\n                                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                                if gt(var_tAmount, sum)\n                                {\n                                    mstore(_3, shl(224, 0x4e487b71))\n                                    mstore(_2, 0x11)\n                                    revert(_3, _8)\n                                }\n                                /// @src 7:3445:3466  \"tAmount += amounts[i]\"\n                                var_tAmount := sum\n                            }\n                        }\n                        /// @src 7:3487:3542  \"if (tAmount != msg.value) revert AmountMustEqualValue()\"\n                        if /** @src 7:3491:3511  \"tAmount != msg.value\" */ iszero(eq(var_tAmount, /** @src 7:3502:3511  \"msg.value\" */ callvalue()))\n                        /// @src 7:3487:3542  \"if (tAmount != msg.value) revert AmountMustEqualValue()\"\n                        {\n                            /// @src 7:3520:3542  \"AmountMustEqualValue()\"\n                            let _20 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:3520:3542  \"AmountMustEqualValue()\"\n                            mstore(_20, shl(224, 0xba198589))\n                            revert(_20, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 7:3554:3567  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _3\n                        /// @src 7:3549:3669  \"for (uint256 i = 0; i < amounts.length; i++) {...\"\n                        for { }\n                        /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 1\n                        /// @src 7:3554:3567  \"uint256 i = 0\"\n                        {\n                            /// @src 7:3589:3592  \"i++\"\n                            var_i_1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ add(/** @src 7:3589:3592  \"i++\" */ var_i_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 1)\n                        }\n                        /// @src 7:3589:3592  \"i++\"\n                        {\n                            /// @src 7:3569:3587  \"i < amounts.length\"\n                            if iszero(lt(var_i_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 7:3573:3587  \"amounts.length\" */ memPtr)))\n                            /// @src 7:3569:3587  \"i < amounts.length\"\n                            { break }\n                            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                            let _21 := mload(/** @src 7:3611:3621  \"amounts[i]\" */ memory_array_index_access_address_dyn(memPtr, var_i_1))\n                            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                            let _22 := sub(shl(160, 1), 1)\n                            let cleaned := and(mload(/** @src 7:3623:3632  \"tokens[i]\" */ memory_array_index_access_address_dyn(memPtr_1, var_i_1)), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _22)\n                            let cleaned_1 := and(mload(/** @src 7:3634:3647  \"recipients[i]\" */ memory_array_index_access_address_dyn(memPtr_2, var_i_1)), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _22)\n                            /// @src 7:3649:3661  \"metadatas[i]\"\n                            fun_release(_21, cleaned, cleaned_1, mload(memory_array_index_access_address_dyn(memPtr_3, var_i_1)))\n                        }\n                        /// @src 6:1755:1756  \"2\"\n                        sstore(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 1, 1)\n                        return(_3, _3)\n                    }\n                    case 0x522f6815 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value0_1 := abi_decode_address_12429()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:5496:5502  \"amount\"\n                        fun_sendValue(value0_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ calldataload(36))\n                        return(_3, _3)\n                    }\n                    case 0x6aa633b6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0xff)\n                        let memPos := mload(_1)\n                        mstore(memPos, iszero(iszero(value_1)))\n                        return(memPos, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _23 := sload(_3)\n                        sstore(_3, and(_23, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _3, _3, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(_23, sub(shl(160, 1), 1)), _3)\n                        return(_3, _3)\n                    }\n                    case 0x78499054 {\n                        let param, param_1, param_2, param_3 := abi_decode_uint256t_addresst_address_payablet_bytes(calldatasize())\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        if /** @src 7:1581:1595  \"!s().isEnabled\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0xff))\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        {\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            let _24 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            mstore(_24, shl(224, 0x4e630899))\n                            revert(_24, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 6:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _25 := sub(shl(160, 1), 1)\n                        let _26 := and(/** @src 7:2144:2166  \"provider == address(0)\" */ param_2, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _25)\n                        /// @src 7:2140:2192  \"if (provider == address(0)) revert InvalidProvider()\"\n                        if /** @src 7:2144:2166  \"provider == address(0)\" */ iszero(_26)\n                        /// @src 7:2140:2192  \"if (provider == address(0)) revert InvalidProvider()\"\n                        {\n                            /// @src 7:2175:2192  \"InvalidProvider()\"\n                            let _27 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:2175:2192  \"InvalidProvider()\"\n                            mstore(_27, shl(225, 0x3b136dc1))\n                            revert(_27, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 7:2198:2243  \"if (amount == 0) revert InvalidAmount(amount)\"\n                        if /** @src 7:2202:2213  \"amount == 0\" */ iszero(param)\n                        /// @src 7:2198:2243  \"if (amount == 0) revert InvalidAmount(amount)\"\n                        {\n                            /// @src 7:2222:2243  \"InvalidAmount(amount)\"\n                            let _28 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:2222:2243  \"InvalidAmount(amount)\"\n                            mstore(_28, shl(224, 0x3728b83d))\n                            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                            mstore(/** @src 7:2222:2243  \"InvalidAmount(amount)\" */ add(_28, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2), param)\n                            /// @src 7:2222:2243  \"InvalidAmount(amount)\"\n                            revert(_28, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                        }\n                        let _29 := and(/** @src 7:2253:2272  \"token == address(0)\" */ param_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _25)\n                        /// @src 7:2253:2295  \"token == address(0) && amount != msg.value\"\n                        let expr_3 := /** @src 7:2253:2272  \"token == address(0)\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _29)\n                        /// @src 7:2253:2295  \"token == address(0) && amount != msg.value\"\n                        let expr_4 := expr_3\n                        if expr_3\n                        {\n                            expr_3 := /** @src 7:2276:2295  \"amount != msg.value\" */ iszero(eq(param, /** @src 7:2286:2295  \"msg.value\" */ callvalue()))\n                        }\n                        /// @src 7:2249:2326  \"if (token == address(0) && amount != msg.value) revert AmountMustEqualValue()\"\n                        if expr_3\n                        {\n                            /// @src 7:2304:2326  \"AmountMustEqualValue()\"\n                            let _30 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:2304:2326  \"AmountMustEqualValue()\"\n                            mstore(_30, /** @src 7:3520:3542  \"AmountMustEqualValue()\" */ shl(224, 0xba198589))\n                            /// @src 7:2304:2326  \"AmountMustEqualValue()\"\n                            revert(_30, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 7:2365:2509  \"if (token == address(0)) {...\"\n                        switch expr_4\n                        case 0 {\n                            /// @src 7:2448:2502  \"IERC20(token).safeTransferFrom(user, provider, amount)\"\n                            fun_safeTransferFrom(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _29, /** @src 7:2348:2358  \"msg.sender\" */ caller(), /** @src 7:2448:2502  \"IERC20(token).safeTransferFrom(user, provider, amount)\" */ _26, param)\n                        }\n                        default /// @src 7:2365:2509  \"if (token == address(0)) {...\"\n                        {\n                            /// @src 7:2417:2426  \"msg.value\"\n                            fun_sendValue(param_2, callvalue())\n                        }\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _31 := sload(/** @src 7:4986:5008  \"s().bridgeIndexs[user]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:2348:2358  \"msg.sender\" */ caller()))\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        mstore(_3, /** @src 7:2348:2358  \"msg.sender\" */ caller())\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _32 := 0x20\n                        mstore(_32, /** @src 7:4383:4394  \"s().bridges\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddda)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        mstore(_3, sload(/** @src 7:4986:5008  \"s().bridgeIndexs[user]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:2348:2358  \"msg.sender\" */ caller())))\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        mstore(_32, dataSlot)\n                        let dataSlot_1 := keccak256(_3, _1)\n                        let newLen := mload(param_3)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        let _33 := sload(dataSlot_1)\n                        let length := _3\n                        /// @src 7:4986:5002  \"s().bridgeIndexs\"\n                        let _34 := 1\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        length := shr(/** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _33)\n                        let outOfPlaceEncoding := and(_33, /** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, _32))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x22)\n                            revert(_3, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(_3, dataSlot_1)\n                            let data := keccak256(_3, _32)\n                            let deleteStart := add(data, shr(5, add(newLen, 31)))\n                            if lt(newLen, _32) { deleteStart := data }\n                            let _35 := add(data, shr(5, add(length, 31)))\n                            let start := deleteStart\n                            for { }\n                            lt(start, _35)\n                            {\n                                start := add(start, /** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34)\n                            }\n                            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                            { sstore(start, _3) }\n                        }\n                        let srcOffset := _3\n                        srcOffset := _32\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_3, dataSlot_1)\n                            let dstPtr := keccak256(_3, _32)\n                            let i := _3\n                            for { } lt(i, loopEnd) { i := add(i, _32) }\n                            {\n                                sstore(dstPtr, mload(add(param_3, srcOffset)))\n                                dstPtr := add(dstPtr, /** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34)\n                                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                                srcOffset := add(srcOffset, _32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(param_3, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 7:4383:4394  \"s().bridges\" */ 3, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ newLen), 248), not(0)))))\n                            }\n                            sstore(dataSlot_1, add(shl(/** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ newLen), /** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34))\n                        }\n                        default /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        {\n                            let value_2 := _3\n                            if newLen\n                            {\n                                value_2 := mload(add(param_3, srcOffset))\n                            }\n                            sstore(dataSlot_1, or(and(value_2, not(shr(shl(/** @src 7:4383:4394  \"s().bridges\" */ 3, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ newLen), not(0)))), shl(/** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ newLen)))\n                        }\n                        /// @src 7:4649:4671  \"s().bridgeIndexs[user]\"\n                        let _36 := mapping_index_access_mapping_address_uint256_of_address(/** @src 7:2348:2358  \"msg.sender\" */ caller())\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _37 := sload(/** @src 7:4649:4676  \"s().bridgeIndexs[user] += 1\" */ _36)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let sum_1 := add(_37, /** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        if gt(_37, sum_1)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        /// @src 6:1755:1756  \"2\"\n                        sstore(_36, sum_1)\n                        /// @src 7:2633:2694  \"Bridged(msg.sender, provider, token, amount, metadata, index)\"\n                        let _38 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                        mstore(_38, /** @src 7:2348:2358  \"msg.sender\" */ caller())\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        mstore(add(_38, _32), _26)\n                        mstore(add(_38, _1), _29)\n                        mstore(add(_38, 96), param)\n                        mstore(add(_38, 128), 192)\n                        let tail := abi_encode_bytes(param_3, add(_38, 192))\n                        mstore(add(_38, 160), _31)\n                        /// @src 7:2633:2694  \"Bridged(msg.sender, provider, token, amount, metadata, index)\"\n                        log1(_38, sub(tail, _38), 0x297f17d10090e4dfa4e81099935283e1484b1f7138b03587e42793e2b091fa1d)\n                        /// @src 6:1755:1756  \"2\"\n                        sstore(/** @src 7:4986:5002  \"s().bridgeIndexs\" */ _34, _34)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let cleaned_2 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, cleaned_2)\n                        return(memPos_1, 32)\n                    }\n                    case 0xb6f97501 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_3 := calldataload(_2)\n                        let _39 := iszero(iszero(value_3))\n                        if iszero(eq(value_3, _39)) { revert(_3, _3) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\"\n                        let _40 := 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let value_4 := and(sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ _40), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ not(255))\n                        sstore(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ _40, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ or(value_4, and(_39, 255)))\n                        /// @src 7:1962:1987  \"EnableChanged(_isEnabled)\"\n                        let _41 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                        mstore(_41, _39)\n                        /// @src 7:1962:1987  \"EnableChanged(_isEnabled)\"\n                        log1(_41, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 32, /** @src 7:1962:1987  \"EnableChanged(_isEnabled)\" */ 0x3659fce67df53590a7b123b78110e4a82622aed9b1078a60fe06aa6072113644)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        return(_3, _3)\n                    }\n                    case 0xc4b7f65b {\n                        let param_4, param_5, param_6, param_7 := abi_decode_uint256t_addresst_address_payablet_bytes(calldatasize())\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        if /** @src 7:1581:1595  \"!s().isEnabled\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0xff))\n                        /// @src 7:1577:1632  \"if (!s().isEnabled) {...\"\n                        {\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            let _42 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:1612:1625  \"OnlyEnabled()\"\n                            mstore(_42, shl(224, 0x4e630899))\n                            revert(_42, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 6:2322:2425  \"modifier nonReentrant() {...\"\n                        fun_nonReentrantBefore()\n                        /// @src 7:2853:2895  \"token == address(0) && amount != msg.value\"\n                        let expr_5 := /** @src 7:2853:2872  \"token == address(0)\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(/** @src 7:2853:2872  \"token == address(0)\" */ param_5, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 7:2853:2895  \"token == address(0) && amount != msg.value\"\n                        if expr_5\n                        {\n                            expr_5 := /** @src 7:2876:2895  \"amount != msg.value\" */ iszero(eq(param_4, /** @src 7:2886:2895  \"msg.value\" */ callvalue()))\n                        }\n                        /// @src 7:2849:2926  \"if (token == address(0) && amount != msg.value) revert AmountMustEqualValue()\"\n                        if expr_5\n                        {\n                            /// @src 7:2904:2926  \"AmountMustEqualValue()\"\n                            let _43 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:2904:2926  \"AmountMustEqualValue()\"\n                            mstore(_43, /** @src 7:3520:3542  \"AmountMustEqualValue()\" */ shl(224, 0xba198589))\n                            /// @src 7:2904:2926  \"AmountMustEqualValue()\"\n                            revert(_43, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        /// @src 7:2968:2976  \"metadata\"\n                        fun_release(param_4, param_5, param_6, param_7)\n                        /// @src 6:1755:1756  \"2\"\n                        sstore(/** @src 6:1713:1714  \"1\" */ 0x01, 0x01)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        return(_3, _3)\n                    }\n                    case 0xd5016af7 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let _44 := sload(/** @src 7:4872:4899  \"s().releaseIndexs[provider]\" */ mapping_index_access_mapping_address_uint256_of_address_12440(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ abi_decode_address_12429()))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _44)\n                        return(memPos_2, 32)\n                    }\n                    case 0xd53a822f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_5 := calldataload(_2)\n                        let _45 := iszero(iszero(value_5))\n                        if iszero(eq(value_5, _45)) { revert(_3, _3) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\"\n                        let _46 := 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd7\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _47 := sload(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ _46)\n                        /// @src 7:1749:1790  \"if (s().initialized) revert Initialized()\"\n                        if /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(shr(8, _47), 0xff)\n                        /// @src 7:1749:1790  \"if (s().initialized) revert Initialized()\"\n                        {\n                            /// @src 7:1777:1790  \"Initialized()\"\n                            let _48 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 7:1777:1790  \"Initialized()\"\n                            mstore(_48, shl(229, 0x02ed543d))\n                            revert(_48, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2)\n                        }\n                        sstore(/** @src 7:1453:1492  \"keccak256('Bridge.contract.storage.v1')\" */ _46, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ or(or(and(_47, not(65535)), and(_45, 0xff)), 256))\n                        return(_3, _3)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value0_2 := abi_decode_address_12429()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        let _49 := sub(shl(160, 1), 1)\n                        let _50 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_2, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _49)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _50)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _51 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(_1)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_51, shl(224, 0x1e4fbdf7))\n                            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_51, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _2), _3)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_51, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                        }\n                        let _52 := sload(_3)\n                        sstore(_3, or(and(_52, shl(160, 0xffffffffffffffffffffffff)), _50))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _3, _3, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(_52, _49), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _50)\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        return(_3, _3)\n                    }\n                    case 0xfba07f5f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let _53 := sload(/** @src 7:4986:5008  \"s().bridgeIndexs[user]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ abi_decode_address_12429()))\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _53)\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_12429() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                array := memPtr\n            }\n            function abi_decode_uint256t_addresst_address_payablet_bytes(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                value1 := value\n                let value_1 := calldataload(68)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                value2 := value_1\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                value3 := abi_decode_bytes(add(4, offset), dataEnd)\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:4986:5002  \"s().bridgeIndexs\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd8)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_12440(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 7:4872:4889  \"s().releaseIndexs\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062ddd9)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let cleaned := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ cleaned, /** @src 5:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 5:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                }\n            }\n            /// @ast-id 883 @src 6:2431:2738  \"function _nonReentrantBefore() private {...\"\n            function fun_nonReentrantBefore()\n            {\n                /// @src 6:2554:2640  \"if (_status == ENTERED) {...\"\n                if /** @src 6:2558:2576  \"_status == ENTERED\" */ eq(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sload(/** @src 6:2558:2565  \"_status\" */ 0x01), /** @src 6:1755:1756  \"2\" */ 0x02)\n                /// @src 6:2554:2640  \"if (_status == ENTERED) {...\"\n                {\n                    /// @src 6:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    let _1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 6:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                    mstore(_1, shl(224, 0x3ee5aeb5))\n                    revert(_1, 4)\n                }\n                /// @src 6:1755:1756  \"2\"\n                sstore(/** @src 6:2558:2565  \"_status\" */ 0x01, /** @src 6:1755:1756  \"2\" */ 0x02)\n            }\n            /// @ast-id 1413 @src 7:3677:4298  \"function _release(uint256 amount, address token, address payable recipient, bytes memory metadata) internal {...\"\n            function fun_release(var_amount, var_token, var_recipient, var_metadata_mpos)\n            {\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 7:3795:3818  \"recipient == address(0)\" */ var_recipient, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _1)\n                /// @src 7:3791:3852  \"if (recipient == address(0)) revert InvalidRecipientAddress()\"\n                if /** @src 7:3795:3818  \"recipient == address(0)\" */ iszero(_2)\n                /// @src 7:3791:3852  \"if (recipient == address(0)) revert InvalidRecipientAddress()\"\n                {\n                    /// @src 7:3827:3852  \"InvalidRecipientAddress()\"\n                    let _3 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 7:3827:3852  \"InvalidRecipientAddress()\"\n                    mstore(_3, shl(225, 0x226ccff5))\n                    revert(_3, 4)\n                }\n                /// @src 7:3858:3903  \"if (amount == 0) revert InvalidAmount(amount)\"\n                if /** @src 7:3862:3873  \"amount == 0\" */ iszero(var_amount)\n                /// @src 7:3858:3903  \"if (amount == 0) revert InvalidAmount(amount)\"\n                {\n                    /// @src 7:3882:3903  \"InvalidAmount(amount)\"\n                    let _4 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 7:3882:3903  \"InvalidAmount(amount)\"\n                    mstore(_4, /** @src 7:2222:2243  \"InvalidAmount(amount)\" */ shl(224, 0x3728b83d))\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    mstore(/** @src 7:3882:3903  \"InvalidAmount(amount)\" */ add(_4, 4), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ var_amount)\n                    /// @src 7:3882:3903  \"InvalidAmount(amount)\"\n                    revert(_4, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                }\n                let _5 := and(/** @src 7:3950:3969  \"token == address(0)\" */ var_token, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _1)\n                /// @src 7:3946:4093  \"if (token == address(0)) {...\"\n                switch /** @src 7:3950:3969  \"token == address(0)\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _5)\n                case /** @src 7:3946:4093  \"if (token == address(0)) {...\" */ 0 {\n                    /// @src 7:4027:4086  \"IERC20(token).safeTransferFrom(provider, recipient, amount)\"\n                    fun_safeTransferFrom(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _5, /** @src 7:3929:3939  \"msg.sender\" */ caller(), /** @src 7:4027:4086  \"IERC20(token).safeTransferFrom(provider, recipient, amount)\" */ _2, var_amount)\n                }\n                default /// @src 7:3946:4093  \"if (token == address(0)) {...\"\n                {\n                    /// @src 7:3999:4005  \"amount\"\n                    fun_sendValue(var_recipient, var_amount)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _6 := sload(/** @src 7:4872:4899  \"s().releaseIndexs[provider]\" */ mapping_index_access_mapping_address_uint256_of_address_12440(/** @src 7:3929:3939  \"msg.sender\" */ caller()))\n                /// @src -1:-1:-1\n                let _7 := 0\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 7:3929:3939  \"msg.sender\" */ caller())\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _8 := 0x20\n                mstore(_8, /** @src 7:4525:4537  \"s().releases\" */ 0x8d336be257b734a9c9d9c70acdccf086c956a38328b0ee2a29e5c0b10062dddb)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sload(/** @src 7:4872:4899  \"s().releaseIndexs[provider]\" */ mapping_index_access_mapping_address_uint256_of_address_12440(/** @src 7:3929:3939  \"msg.sender\" */ caller())))\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                mstore(_8, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x40)\n                let newLen := mload(var_metadata_mpos)\n                if gt(newLen, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 7:4525:4537  \"s().releases\" */ 4, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x41)\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x24)\n                }\n                let _9 := sload(dataSlot_1)\n                let length := /** @src -1:-1:-1 */ _7\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _10 := 1\n                length := shr(_10, _9)\n                let outOfPlaceEncoding := and(_9, _10)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, _8))\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 7:4525:4537  \"s().releases\" */ 4, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x22)\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x24)\n                }\n                if gt(length, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ dataSlot_1)\n                    let data := keccak256(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _8)\n                    let deleteStart := add(data, shr(5, add(newLen, 31)))\n                    if lt(newLen, _8) { deleteStart := data }\n                    let _11 := add(data, shr(5, add(length, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _11) { start := add(start, _10) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _7)\n                    }\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let srcOffset := /** @src -1:-1:-1 */ _7\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                srcOffset := _8\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, not(31))\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ dataSlot_1)\n                    let dstPtr := keccak256(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _8)\n                    let i := /** @src -1:-1:-1 */ _7\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    for { } lt(i, loopEnd) { i := add(i, _8) }\n                    {\n                        sstore(dstPtr, mload(add(var_metadata_mpos, srcOffset)))\n                        dstPtr := add(dstPtr, _10)\n                        srcOffset := add(srcOffset, _8)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(var_metadata_mpos, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(dataSlot_1, add(shl(_10, newLen), _10))\n                }\n                default {\n                    let value := /** @src -1:-1:-1 */ _7\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    if newLen\n                    {\n                        value := mload(add(var_metadata_mpos, srcOffset))\n                    }\n                    sstore(dataSlot_1, or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_10, newLen)))\n                }\n                /// @src 7:4748:4775  \"s().releaseIndexs[provider]\"\n                let _12 := mapping_index_access_mapping_address_uint256_of_address_12440(/** @src 7:3929:3939  \"msg.sender\" */ caller())\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _13 := sload(/** @src 7:4748:4780  \"s().releaseIndexs[provider] += 1\" */ _12)\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let sum := add(_13, _10)\n                if gt(_13, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 7:4525:4537  \"s().releases\" */ 4, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x11)\n                    revert(/** @src -1:-1:-1 */ _7, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 0x24)\n                }\n                /// @src 6:1755:1756  \"2\"\n                sstore(_12, sum)\n                /// @src 7:4232:4293  \"Released(recipient, provider, token, amount, metadata, index)\"\n                let _14 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(0x40)\n                mstore(_14, _2)\n                mstore(add(_14, _8), /** @src 7:3929:3939  \"msg.sender\" */ caller())\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                mstore(add(_14, 0x40), _5)\n                mstore(add(_14, 96), var_amount)\n                mstore(add(_14, 128), 192)\n                let tail := abi_encode_bytes(var_metadata_mpos, add(_14, 192))\n                mstore(add(_14, 160), _6)\n                /// @src 7:4232:4293  \"Released(recipient, provider, token, amount, metadata, index)\"\n                log1(_14, sub(tail, _14), 0xd42158eb0ea2dc2dce92d3cd105f32a6a4dbc2016fd376f6adbd28bb3dc7b3fb)\n            }\n            /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 608 @src 4:1531:1862  \"function sendValue(address payable recipient, uint256 amount) internal {...\"\n            function fun_sendValue(var_recipient, var_amount)\n            {\n                /// @src 4:1612:1721  \"if (address(this).balance < amount) {...\"\n                if /** @src 4:1616:1646  \"address(this).balance < amount\" */ lt(/** @src 4:1616:1637  \"address(this).balance\" */ selfbalance(), /** @src 4:1616:1646  \"address(this).balance < amount\" */ var_amount)\n                /// @src 4:1612:1721  \"if (address(this).balance < amount) {...\"\n                {\n                    /// @src 4:1669:1710  \"AddressInsufficientBalance(address(this))\"\n                    let _1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 4:1669:1710  \"AddressInsufficientBalance(address(this))\"\n                    mstore(_1, shl(224, 0xcd786059))\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    mstore(/** @src 4:1669:1710  \"AddressInsufficientBalance(address(this))\" */ add(_1, 4), /** @src 4:1624:1628  \"this\" */ address())\n                    /// @src 4:1669:1710  \"AddressInsufficientBalance(address(this))\"\n                    revert(_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                }\n                /// @src 4:1750:1783  \"recipient.call{value: amount}(\\\"\\\")\"\n                let expr_component := call(gas(), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(/** @src 4:1750:1764  \"recipient.call\" */ var_recipient, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sub(shl(160, 1), 1)), /** @src 4:1750:1783  \"recipient.call{value: amount}(\\\"\\\")\" */ var_amount, 0, 0, 0, 0)\n                pop(extract_returndata())\n                /// @src 4:1793:1856  \"if (!success) {...\"\n                if /** @src 4:1797:1805  \"!success\" */ iszero(expr_component)\n                /// @src 4:1793:1856  \"if (!success) {...\"\n                {\n                    /// @src 4:1828:1845  \"FailedInnerCall()\"\n                    let _2 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 4:1828:1845  \"FailedInnerCall()\"\n                    mstore(_2, shl(225, 0x0a12f521))\n                    revert(_2, 4)\n                }\n            }\n            /// @ast-id 338 @src 3:1702:1890  \"function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {...\"\n            function fun_safeTransferFrom(var_token_315_address, var_from, var_to, var_value)\n            {\n                /// @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                let expr_mpos := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                /// @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                mstore(add(expr_mpos, 0x20), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ shl(224, 0x23b872dd))\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, 36), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(var_from, _1))\n                mstore(add(/** @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 68), and(var_to, _1))\n                mstore(add(/** @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 100), var_value)\n                /// @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                mstore(expr_mpos, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 100)\n                let newFreePtr := add(expr_mpos, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, /** @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ 36)\n                }\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                mstore(64, newFreePtr)\n                /// @src 3:1829:1882  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                fun_callOptionalReturn(var_token_315_address, expr_mpos)\n            }\n            /// @ast-id 501 @src 3:4059:4688  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                let _1 := and(/** @src 3:4504:4518  \"address(token)\" */ var_token_address, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:2847:2848  \"0\"\n                let _2 := 0x00\n                /// @src 4:3462:3493  \"target.call{value: value}(data)\"\n                let expr_component := call(gas(), _1, /** @src 4:2847:2848  \"0\" */ _2, /** @src 4:3462:3493  \"target.call{value: value}(data)\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src 4:2847:2848  \"0\" */ _2, _2)\n                /// @src 4:3503:3565  \"return verifyCallResultFromTarget(target, success, returndata)\"\n                let var_mpos := /** @src 4:3510:3565  \"verifyCallResultFromTarget(target, success, returndata)\" */ fun_verifyCallResultFromTarget(_1, expr_component, /** @src 4:3462:3493  \"target.call{value: value}(data)\" */ extract_returndata())\n                /// @src 3:4551:4568  \"returndata.length\"\n                let expr := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 3:4551:4568  \"returndata.length\" */ var_mpos)\n                /// @src 3:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                let expr_1 := /** @src 3:4551:4573  \"returndata.length != 0\" */ iszero(iszero(expr))\n                /// @src 3:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                if expr_1\n                {\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    if slt(sub(/** @src 3:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, expr), var_mpos), /** @src 4:3462:3493  \"target.call{value: value}(data)\" */ 0x20)\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    {\n                        revert(/** @src 4:2847:2848  \"0\" */ _2, _2)\n                    }\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    let value := mload(/** @src 3:4578:4608  \"abi.decode(returndata, (bool))\" */ add(var_mpos, /** @src 4:3462:3493  \"target.call{value: value}(data)\" */ 0x20))\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    let _3 := iszero(value)\n                    if iszero(eq(value, iszero(_3)))\n                    {\n                        revert(/** @src 4:2847:2848  \"0\" */ _2, _2)\n                    }\n                    /// @src 3:4551:4608  \"returndata.length != 0 && !abi.decode(returndata, (bool))\"\n                    expr_1 := _3\n                }\n                /// @src 3:4547:4682  \"if (returndata.length != 0 && !abi.decode(returndata, (bool))) {...\"\n                if expr_1\n                {\n                    /// @src 3:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    let _4 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                    /// @src 3:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(_4, shl(224, 0x5274afe7))\n                    /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                    mstore(/** @src 3:4631:4671  \"SafeERC20FailedOperation(address(token))\" */ add(_4, 4), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ _1)\n                    /// @src 3:4631:4671  \"SafeERC20FailedOperation(address(token))\"\n                    revert(_4, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                }\n            }\n            /// @ast-id 763 @src 4:4625:5207  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n            {\n                /// @src 4:4793:5201  \"if (!success) {...\"\n                switch /** @src 4:4797:4805  \"!success\" */ iszero(var_success)\n                case /** @src 4:4793:5201  \"if (!success) {...\" */ 0 {\n                    /// @src 4:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 4:5045:5067  \"returndata.length == 0\" */ iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 4:5045:5062  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 4:5045:5094  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 4:5071:5094  \"target.code.length == 0\" */ iszero(/** @src 4:5071:5089  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 4:5041:5160  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 4:5121:5145  \"AddressEmptyCode(target)\"\n                        let _1 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 4:5121:5145  \"AddressEmptyCode(target)\"\n                        mstore(_1, shl(224, 0x9996b315))\n                        /// @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\"\n                        mstore(/** @src 4:5121:5145  \"AddressEmptyCode(target)\" */ add(_1, 4), /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 4:5121:5145  \"AddressEmptyCode(target)\"\n                        revert(_1, /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ 36)\n                    }\n                    /// @src 4:5173:5190  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 4:4793:5201  \"if (!success) {...\"\n                {\n                    /// @src 4:5870:6253  \"if (returndata.length > 0) {...\"\n                    switch /** @src 4:5874:5895  \"returndata.length > 0\" */ iszero(iszero(/** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(/** @src 4:5874:5891  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 4:5870:6253  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 4:6225:6242  \"FailedInnerCall()\"\n                        let _2 := /** @src 7:446:5547  \"contract Bridge is Ownable, ReentrancyGuard {...\" */ mload(64)\n                        /// @src 4:6225:6242  \"FailedInnerCall()\"\n                        mstore(_2, /** @src 4:1828:1845  \"FailedInnerCall()\" */ shl(225, 0x0a12f521))\n                        /// @src 4:6225:6242  \"FailedInnerCall()\"\n                        revert(_2, 4)\n                    }\n                    default /// @src 4:5870:6253  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 4:6046:6188  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220bc13467a7113677a5b6077f24fce523d217a586933d40523d75bfdf0517c1a0d64736f6c63430008180033\"\n    }\n}\n","hash":"010002ada2f6d0446d9d6d27695b21297e094bfe7ce1f53411f51f50f456d01b","factoryDependencies":{}}}}}}